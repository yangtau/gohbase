//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.4
// source: Master.proto

// All to do with the Master.  Includes schema management since these
// changes are run by the Master process.

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MasterSwitchType int32

const (
	MasterSwitchType_SPLIT MasterSwitchType = 0
	MasterSwitchType_MERGE MasterSwitchType = 1
)

// Enum value maps for MasterSwitchType.
var (
	MasterSwitchType_name = map[int32]string{
		0: "SPLIT",
		1: "MERGE",
	}
	MasterSwitchType_value = map[string]int32{
		"SPLIT": 0,
		"MERGE": 1,
	}
)

func (x MasterSwitchType) Enum() *MasterSwitchType {
	p := new(MasterSwitchType)
	*p = x
	return p
}

func (x MasterSwitchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MasterSwitchType) Descriptor() protoreflect.EnumDescriptor {
	return file_Master_proto_enumTypes[0].Descriptor()
}

func (MasterSwitchType) Type() protoreflect.EnumType {
	return &file_Master_proto_enumTypes[0]
}

func (x MasterSwitchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MasterSwitchType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MasterSwitchType(num)
	return nil
}

// Deprecated: Use MasterSwitchType.Descriptor instead.
func (MasterSwitchType) EnumDescriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{0}
}

type GetProcedureResultResponse_State int32

const (
	GetProcedureResultResponse_NOT_FOUND GetProcedureResultResponse_State = 0
	GetProcedureResultResponse_RUNNING   GetProcedureResultResponse_State = 1
	GetProcedureResultResponse_FINISHED  GetProcedureResultResponse_State = 2
)

// Enum value maps for GetProcedureResultResponse_State.
var (
	GetProcedureResultResponse_State_name = map[int32]string{
		0: "NOT_FOUND",
		1: "RUNNING",
		2: "FINISHED",
	}
	GetProcedureResultResponse_State_value = map[string]int32{
		"NOT_FOUND": 0,
		"RUNNING":   1,
		"FINISHED":  2,
	}
)

func (x GetProcedureResultResponse_State) Enum() *GetProcedureResultResponse_State {
	p := new(GetProcedureResultResponse_State)
	*p = x
	return p
}

func (x GetProcedureResultResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetProcedureResultResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_Master_proto_enumTypes[1].Descriptor()
}

func (GetProcedureResultResponse_State) Type() protoreflect.EnumType {
	return &file_Master_proto_enumTypes[1]
}

func (x GetProcedureResultResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetProcedureResultResponse_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetProcedureResultResponse_State(num)
	return nil
}

// Deprecated: Use GetProcedureResultResponse_State.Descriptor instead.
func (GetProcedureResultResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{115, 0}
}

type SecurityCapabilitiesResponse_Capability int32

const (
	SecurityCapabilitiesResponse_SIMPLE_AUTHENTICATION SecurityCapabilitiesResponse_Capability = 0
	SecurityCapabilitiesResponse_SECURE_AUTHENTICATION SecurityCapabilitiesResponse_Capability = 1
	SecurityCapabilitiesResponse_AUTHORIZATION         SecurityCapabilitiesResponse_Capability = 2
	SecurityCapabilitiesResponse_CELL_AUTHORIZATION    SecurityCapabilitiesResponse_Capability = 3
	SecurityCapabilitiesResponse_CELL_VISIBILITY       SecurityCapabilitiesResponse_Capability = 4
)

// Enum value maps for SecurityCapabilitiesResponse_Capability.
var (
	SecurityCapabilitiesResponse_Capability_name = map[int32]string{
		0: "SIMPLE_AUTHENTICATION",
		1: "SECURE_AUTHENTICATION",
		2: "AUTHORIZATION",
		3: "CELL_AUTHORIZATION",
		4: "CELL_VISIBILITY",
	}
	SecurityCapabilitiesResponse_Capability_value = map[string]int32{
		"SIMPLE_AUTHENTICATION": 0,
		"SECURE_AUTHENTICATION": 1,
		"AUTHORIZATION":         2,
		"CELL_AUTHORIZATION":    3,
		"CELL_VISIBILITY":       4,
	}
)

func (x SecurityCapabilitiesResponse_Capability) Enum() *SecurityCapabilitiesResponse_Capability {
	p := new(SecurityCapabilitiesResponse_Capability)
	*p = x
	return p
}

func (x SecurityCapabilitiesResponse_Capability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityCapabilitiesResponse_Capability) Descriptor() protoreflect.EnumDescriptor {
	return file_Master_proto_enumTypes[2].Descriptor()
}

func (SecurityCapabilitiesResponse_Capability) Type() protoreflect.EnumType {
	return &file_Master_proto_enumTypes[2]
}

func (x SecurityCapabilitiesResponse_Capability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SecurityCapabilitiesResponse_Capability) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SecurityCapabilitiesResponse_Capability(num)
	return nil
}

// Deprecated: Use SecurityCapabilitiesResponse_Capability.Descriptor instead.
func (SecurityCapabilitiesResponse_Capability) EnumDescriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{126, 0}
}

type AddColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName      *TableName          `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	ColumnFamilies *ColumnFamilySchema `protobuf:"bytes,2,req,name=column_families,json=columnFamilies" json:"column_families,omitempty"`
	NonceGroup     *uint64             `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce          *uint64             `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for AddColumnRequest fields.
const (
	Default_AddColumnRequest_NonceGroup = uint64(0)
	Default_AddColumnRequest_Nonce      = uint64(0)
)

func (x *AddColumnRequest) Reset() {
	*x = AddColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddColumnRequest) ProtoMessage() {}

func (x *AddColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddColumnRequest.ProtoReflect.Descriptor instead.
func (*AddColumnRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{0}
}

func (x *AddColumnRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *AddColumnRequest) GetColumnFamilies() *ColumnFamilySchema {
	if x != nil {
		return x.ColumnFamilies
	}
	return nil
}

func (x *AddColumnRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_AddColumnRequest_NonceGroup
}

func (x *AddColumnRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_AddColumnRequest_Nonce
}

type AddColumnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *AddColumnResponse) Reset() {
	*x = AddColumnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddColumnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddColumnResponse) ProtoMessage() {}

func (x *AddColumnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddColumnResponse.ProtoReflect.Descriptor instead.
func (*AddColumnResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{1}
}

func (x *AddColumnResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type DeleteColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	ColumnName []byte     `protobuf:"bytes,2,req,name=column_name,json=columnName" json:"column_name,omitempty"`
	NonceGroup *uint64    `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64    `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for DeleteColumnRequest fields.
const (
	Default_DeleteColumnRequest_NonceGroup = uint64(0)
	Default_DeleteColumnRequest_Nonce      = uint64(0)
)

func (x *DeleteColumnRequest) Reset() {
	*x = DeleteColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteColumnRequest) ProtoMessage() {}

func (x *DeleteColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteColumnRequest.ProtoReflect.Descriptor instead.
func (*DeleteColumnRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteColumnRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *DeleteColumnRequest) GetColumnName() []byte {
	if x != nil {
		return x.ColumnName
	}
	return nil
}

func (x *DeleteColumnRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_DeleteColumnRequest_NonceGroup
}

func (x *DeleteColumnRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_DeleteColumnRequest_Nonce
}

type DeleteColumnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *DeleteColumnResponse) Reset() {
	*x = DeleteColumnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteColumnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteColumnResponse) ProtoMessage() {}

func (x *DeleteColumnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteColumnResponse.ProtoReflect.Descriptor instead.
func (*DeleteColumnResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteColumnResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type ModifyColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName      *TableName          `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	ColumnFamilies *ColumnFamilySchema `protobuf:"bytes,2,req,name=column_families,json=columnFamilies" json:"column_families,omitempty"`
	NonceGroup     *uint64             `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce          *uint64             `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for ModifyColumnRequest fields.
const (
	Default_ModifyColumnRequest_NonceGroup = uint64(0)
	Default_ModifyColumnRequest_Nonce      = uint64(0)
)

func (x *ModifyColumnRequest) Reset() {
	*x = ModifyColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyColumnRequest) ProtoMessage() {}

func (x *ModifyColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyColumnRequest.ProtoReflect.Descriptor instead.
func (*ModifyColumnRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{4}
}

func (x *ModifyColumnRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *ModifyColumnRequest) GetColumnFamilies() *ColumnFamilySchema {
	if x != nil {
		return x.ColumnFamilies
	}
	return nil
}

func (x *ModifyColumnRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_ModifyColumnRequest_NonceGroup
}

func (x *ModifyColumnRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_ModifyColumnRequest_Nonce
}

type ModifyColumnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *ModifyColumnResponse) Reset() {
	*x = ModifyColumnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyColumnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyColumnResponse) ProtoMessage() {}

func (x *ModifyColumnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyColumnResponse.ProtoReflect.Descriptor instead.
func (*ModifyColumnResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{5}
}

func (x *ModifyColumnResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type MoveRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region         *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	DestServerName *ServerName      `protobuf:"bytes,2,opt,name=dest_server_name,json=destServerName" json:"dest_server_name,omitempty"`
}

func (x *MoveRegionRequest) Reset() {
	*x = MoveRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRegionRequest) ProtoMessage() {}

func (x *MoveRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRegionRequest.ProtoReflect.Descriptor instead.
func (*MoveRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{6}
}

func (x *MoveRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *MoveRegionRequest) GetDestServerName() *ServerName {
	if x != nil {
		return x.DestServerName
	}
	return nil
}

type MoveRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveRegionResponse) Reset() {
	*x = MoveRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRegionResponse) ProtoMessage() {}

func (x *MoveRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRegionResponse.ProtoReflect.Descriptor instead.
func (*MoveRegionResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{7}
}

//*
// Merging the specified regions in a table.
type MergeTableRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region     []*RegionSpecifier `protobuf:"bytes,1,rep,name=region" json:"region,omitempty"`
	Forcible   *bool              `protobuf:"varint,3,opt,name=forcible,def=0" json:"forcible,omitempty"`
	NonceGroup *uint64            `protobuf:"varint,4,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64            `protobuf:"varint,5,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for MergeTableRegionsRequest fields.
const (
	Default_MergeTableRegionsRequest_Forcible   = bool(false)
	Default_MergeTableRegionsRequest_NonceGroup = uint64(0)
	Default_MergeTableRegionsRequest_Nonce      = uint64(0)
)

func (x *MergeTableRegionsRequest) Reset() {
	*x = MergeTableRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTableRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTableRegionsRequest) ProtoMessage() {}

func (x *MergeTableRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTableRegionsRequest.ProtoReflect.Descriptor instead.
func (*MergeTableRegionsRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{8}
}

func (x *MergeTableRegionsRequest) GetRegion() []*RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *MergeTableRegionsRequest) GetForcible() bool {
	if x != nil && x.Forcible != nil {
		return *x.Forcible
	}
	return Default_MergeTableRegionsRequest_Forcible
}

func (x *MergeTableRegionsRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_MergeTableRegionsRequest_NonceGroup
}

func (x *MergeTableRegionsRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_MergeTableRegionsRequest_Nonce
}

type MergeTableRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *MergeTableRegionsResponse) Reset() {
	*x = MergeTableRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTableRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTableRegionsResponse) ProtoMessage() {}

func (x *MergeTableRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTableRegionsResponse.ProtoReflect.Descriptor instead.
func (*MergeTableRegionsResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{9}
}

func (x *MergeTableRegionsResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type AssignRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region   *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Override *bool            `protobuf:"varint,2,opt,name=override,def=0" json:"override,omitempty"`
}

// Default values for AssignRegionRequest fields.
const (
	Default_AssignRegionRequest_Override = bool(false)
)

func (x *AssignRegionRequest) Reset() {
	*x = AssignRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRegionRequest) ProtoMessage() {}

func (x *AssignRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRegionRequest.ProtoReflect.Descriptor instead.
func (*AssignRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{10}
}

func (x *AssignRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *AssignRegionRequest) GetOverride() bool {
	if x != nil && x.Override != nil {
		return *x.Override
	}
	return Default_AssignRegionRequest_Override
}

type AssignRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignRegionResponse) Reset() {
	*x = AssignRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRegionResponse) ProtoMessage() {}

func (x *AssignRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRegionResponse.ProtoReflect.Descriptor instead.
func (*AssignRegionResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{11}
}

type UnassignRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	// This parameter is ignored
	Force *bool `protobuf:"varint,2,opt,name=force,def=0" json:"force,omitempty"`
}

// Default values for UnassignRegionRequest fields.
const (
	Default_UnassignRegionRequest_Force = bool(false)
)

func (x *UnassignRegionRequest) Reset() {
	*x = UnassignRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignRegionRequest) ProtoMessage() {}

func (x *UnassignRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignRegionRequest.ProtoReflect.Descriptor instead.
func (*UnassignRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{12}
}

func (x *UnassignRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *UnassignRegionRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_UnassignRegionRequest_Force
}

type UnassignRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnassignRegionResponse) Reset() {
	*x = UnassignRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignRegionResponse) ProtoMessage() {}

func (x *UnassignRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignRegionResponse.ProtoReflect.Descriptor instead.
func (*UnassignRegionResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{13}
}

type OfflineRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
}

func (x *OfflineRegionRequest) Reset() {
	*x = OfflineRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRegionRequest) ProtoMessage() {}

func (x *OfflineRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRegionRequest.ProtoReflect.Descriptor instead.
func (*OfflineRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{14}
}

func (x *OfflineRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

type OfflineRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OfflineRegionResponse) Reset() {
	*x = OfflineRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRegionResponse) ProtoMessage() {}

func (x *OfflineRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRegionResponse.ProtoReflect.Descriptor instead.
func (*OfflineRegionResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{15}
}

type SplitTableRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfo *RegionInfo `protobuf:"bytes,1,req,name=region_info,json=regionInfo" json:"region_info,omitempty"`
	SplitRow   []byte      `protobuf:"bytes,2,opt,name=split_row,json=splitRow" json:"split_row,omitempty"`
	NonceGroup *uint64     `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64     `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for SplitTableRegionRequest fields.
const (
	Default_SplitTableRegionRequest_NonceGroup = uint64(0)
	Default_SplitTableRegionRequest_Nonce      = uint64(0)
)

func (x *SplitTableRegionRequest) Reset() {
	*x = SplitTableRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitTableRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitTableRegionRequest) ProtoMessage() {}

func (x *SplitTableRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitTableRegionRequest.ProtoReflect.Descriptor instead.
func (*SplitTableRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{16}
}

func (x *SplitTableRegionRequest) GetRegionInfo() *RegionInfo {
	if x != nil {
		return x.RegionInfo
	}
	return nil
}

func (x *SplitTableRegionRequest) GetSplitRow() []byte {
	if x != nil {
		return x.SplitRow
	}
	return nil
}

func (x *SplitTableRegionRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_SplitTableRegionRequest_NonceGroup
}

func (x *SplitTableRegionRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_SplitTableRegionRequest_Nonce
}

type SplitTableRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *SplitTableRegionResponse) Reset() {
	*x = SplitTableRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitTableRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitTableRegionResponse) ProtoMessage() {}

func (x *SplitTableRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitTableRegionResponse.ProtoReflect.Descriptor instead.
func (*SplitTableRegionResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{17}
}

func (x *SplitTableRegionResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type CreateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSchema *TableSchema `protobuf:"bytes,1,req,name=table_schema,json=tableSchema" json:"table_schema,omitempty"`
	SplitKeys   [][]byte     `protobuf:"bytes,2,rep,name=split_keys,json=splitKeys" json:"split_keys,omitempty"`
	NonceGroup  *uint64      `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce       *uint64      `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for CreateTableRequest fields.
const (
	Default_CreateTableRequest_NonceGroup = uint64(0)
	Default_CreateTableRequest_Nonce      = uint64(0)
)

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTableRequest) GetTableSchema() *TableSchema {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

func (x *CreateTableRequest) GetSplitKeys() [][]byte {
	if x != nil {
		return x.SplitKeys
	}
	return nil
}

func (x *CreateTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_CreateTableRequest_NonceGroup
}

func (x *CreateTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_CreateTableRequest_Nonce
}

type CreateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{19}
}

func (x *CreateTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type DeleteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	NonceGroup *uint64    `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64    `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for DeleteTableRequest fields.
const (
	Default_DeleteTableRequest_NonceGroup = uint64(0)
	Default_DeleteTableRequest_Nonce      = uint64(0)
)

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteTableRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *DeleteTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_DeleteTableRequest_NonceGroup
}

func (x *DeleteTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_DeleteTableRequest_Nonce
}

type DeleteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *DeleteTableResponse) Reset() {
	*x = DeleteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableResponse) ProtoMessage() {}

func (x *DeleteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type TruncateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName      *TableName `protobuf:"bytes,1,req,name=tableName" json:"tableName,omitempty"`
	PreserveSplits *bool      `protobuf:"varint,2,opt,name=preserveSplits,def=0" json:"preserveSplits,omitempty"`
	NonceGroup     *uint64    `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce          *uint64    `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for TruncateTableRequest fields.
const (
	Default_TruncateTableRequest_PreserveSplits = bool(false)
	Default_TruncateTableRequest_NonceGroup     = uint64(0)
	Default_TruncateTableRequest_Nonce          = uint64(0)
)

func (x *TruncateTableRequest) Reset() {
	*x = TruncateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateTableRequest) ProtoMessage() {}

func (x *TruncateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateTableRequest.ProtoReflect.Descriptor instead.
func (*TruncateTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{22}
}

func (x *TruncateTableRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *TruncateTableRequest) GetPreserveSplits() bool {
	if x != nil && x.PreserveSplits != nil {
		return *x.PreserveSplits
	}
	return Default_TruncateTableRequest_PreserveSplits
}

func (x *TruncateTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_TruncateTableRequest_NonceGroup
}

func (x *TruncateTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_TruncateTableRequest_Nonce
}

type TruncateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *TruncateTableResponse) Reset() {
	*x = TruncateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateTableResponse) ProtoMessage() {}

func (x *TruncateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateTableResponse.ProtoReflect.Descriptor instead.
func (*TruncateTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{23}
}

func (x *TruncateTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type EnableTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	NonceGroup *uint64    `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64    `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for EnableTableRequest fields.
const (
	Default_EnableTableRequest_NonceGroup = uint64(0)
	Default_EnableTableRequest_Nonce      = uint64(0)
)

func (x *EnableTableRequest) Reset() {
	*x = EnableTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTableRequest) ProtoMessage() {}

func (x *EnableTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTableRequest.ProtoReflect.Descriptor instead.
func (*EnableTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{24}
}

func (x *EnableTableRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *EnableTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_EnableTableRequest_NonceGroup
}

func (x *EnableTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_EnableTableRequest_Nonce
}

type EnableTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *EnableTableResponse) Reset() {
	*x = EnableTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTableResponse) ProtoMessage() {}

func (x *EnableTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTableResponse.ProtoReflect.Descriptor instead.
func (*EnableTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{25}
}

func (x *EnableTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type DisableTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	NonceGroup *uint64    `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64    `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for DisableTableRequest fields.
const (
	Default_DisableTableRequest_NonceGroup = uint64(0)
	Default_DisableTableRequest_Nonce      = uint64(0)
)

func (x *DisableTableRequest) Reset() {
	*x = DisableTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTableRequest) ProtoMessage() {}

func (x *DisableTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTableRequest.ProtoReflect.Descriptor instead.
func (*DisableTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{26}
}

func (x *DisableTableRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *DisableTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_DisableTableRequest_NonceGroup
}

func (x *DisableTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_DisableTableRequest_Nonce
}

type DisableTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *DisableTableResponse) Reset() {
	*x = DisableTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTableResponse) ProtoMessage() {}

func (x *DisableTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTableResponse.ProtoReflect.Descriptor instead.
func (*DisableTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{27}
}

func (x *DisableTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type ModifyTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   *TableName   `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	TableSchema *TableSchema `protobuf:"bytes,2,req,name=table_schema,json=tableSchema" json:"table_schema,omitempty"`
	NonceGroup  *uint64      `protobuf:"varint,3,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce       *uint64      `protobuf:"varint,4,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for ModifyTableRequest fields.
const (
	Default_ModifyTableRequest_NonceGroup = uint64(0)
	Default_ModifyTableRequest_Nonce      = uint64(0)
)

func (x *ModifyTableRequest) Reset() {
	*x = ModifyTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTableRequest) ProtoMessage() {}

func (x *ModifyTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTableRequest.ProtoReflect.Descriptor instead.
func (*ModifyTableRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{28}
}

func (x *ModifyTableRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *ModifyTableRequest) GetTableSchema() *TableSchema {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

func (x *ModifyTableRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_ModifyTableRequest_NonceGroup
}

func (x *ModifyTableRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_ModifyTableRequest_Nonce
}

type ModifyTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *ModifyTableResponse) Reset() {
	*x = ModifyTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTableResponse) ProtoMessage() {}

func (x *ModifyTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTableResponse.ProtoReflect.Descriptor instead.
func (*ModifyTableResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{29}
}

func (x *ModifyTableResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceDescriptor *NamespaceDescriptor `protobuf:"bytes,1,req,name=namespaceDescriptor" json:"namespaceDescriptor,omitempty"`
	NonceGroup          *uint64              `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce               *uint64              `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for CreateNamespaceRequest fields.
const (
	Default_CreateNamespaceRequest_NonceGroup = uint64(0)
	Default_CreateNamespaceRequest_Nonce      = uint64(0)
)

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{30}
}

func (x *CreateNamespaceRequest) GetNamespaceDescriptor() *NamespaceDescriptor {
	if x != nil {
		return x.NamespaceDescriptor
	}
	return nil
}

func (x *CreateNamespaceRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_CreateNamespaceRequest_NonceGroup
}

func (x *CreateNamespaceRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_CreateNamespaceRequest_Nonce
}

type CreateNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *CreateNamespaceResponse) Reset() {
	*x = CreateNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceResponse) ProtoMessage() {}

func (x *CreateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{31}
}

func (x *CreateNamespaceResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type DeleteNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName *string `protobuf:"bytes,1,req,name=namespaceName" json:"namespaceName,omitempty"`
	NonceGroup    *uint64 `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce         *uint64 `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for DeleteNamespaceRequest fields.
const (
	Default_DeleteNamespaceRequest_NonceGroup = uint64(0)
	Default_DeleteNamespaceRequest_Nonce      = uint64(0)
)

func (x *DeleteNamespaceRequest) Reset() {
	*x = DeleteNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceRequest) ProtoMessage() {}

func (x *DeleteNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteNamespaceRequest) GetNamespaceName() string {
	if x != nil && x.NamespaceName != nil {
		return *x.NamespaceName
	}
	return ""
}

func (x *DeleteNamespaceRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_DeleteNamespaceRequest_NonceGroup
}

func (x *DeleteNamespaceRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_DeleteNamespaceRequest_Nonce
}

type DeleteNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *DeleteNamespaceResponse) Reset() {
	*x = DeleteNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceResponse) ProtoMessage() {}

func (x *DeleteNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteNamespaceResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type ModifyNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceDescriptor *NamespaceDescriptor `protobuf:"bytes,1,req,name=namespaceDescriptor" json:"namespaceDescriptor,omitempty"`
	NonceGroup          *uint64              `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce               *uint64              `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
}

// Default values for ModifyNamespaceRequest fields.
const (
	Default_ModifyNamespaceRequest_NonceGroup = uint64(0)
	Default_ModifyNamespaceRequest_Nonce      = uint64(0)
)

func (x *ModifyNamespaceRequest) Reset() {
	*x = ModifyNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyNamespaceRequest) ProtoMessage() {}

func (x *ModifyNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ModifyNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{34}
}

func (x *ModifyNamespaceRequest) GetNamespaceDescriptor() *NamespaceDescriptor {
	if x != nil {
		return x.NamespaceDescriptor
	}
	return nil
}

func (x *ModifyNamespaceRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_ModifyNamespaceRequest_NonceGroup
}

func (x *ModifyNamespaceRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_ModifyNamespaceRequest_Nonce
}

type ModifyNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *ModifyNamespaceResponse) Reset() {
	*x = ModifyNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyNamespaceResponse) ProtoMessage() {}

func (x *ModifyNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ModifyNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{35}
}

func (x *ModifyNamespaceResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type GetNamespaceDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName *string `protobuf:"bytes,1,req,name=namespaceName" json:"namespaceName,omitempty"`
}

func (x *GetNamespaceDescriptorRequest) Reset() {
	*x = GetNamespaceDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceDescriptorRequest) ProtoMessage() {}

func (x *GetNamespaceDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceDescriptorRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{36}
}

func (x *GetNamespaceDescriptorRequest) GetNamespaceName() string {
	if x != nil && x.NamespaceName != nil {
		return *x.NamespaceName
	}
	return ""
}

type GetNamespaceDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceDescriptor *NamespaceDescriptor `protobuf:"bytes,1,req,name=namespaceDescriptor" json:"namespaceDescriptor,omitempty"`
}

func (x *GetNamespaceDescriptorResponse) Reset() {
	*x = GetNamespaceDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceDescriptorResponse) ProtoMessage() {}

func (x *GetNamespaceDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceDescriptorResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{37}
}

func (x *GetNamespaceDescriptorResponse) GetNamespaceDescriptor() *NamespaceDescriptor {
	if x != nil {
		return x.NamespaceDescriptor
	}
	return nil
}

type ListNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{38}
}

type ListNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName []string `protobuf:"bytes,1,rep,name=namespaceName" json:"namespaceName,omitempty"`
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{39}
}

func (x *ListNamespacesResponse) GetNamespaceName() []string {
	if x != nil {
		return x.NamespaceName
	}
	return nil
}

type ListNamespaceDescriptorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNamespaceDescriptorsRequest) Reset() {
	*x = ListNamespaceDescriptorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceDescriptorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDescriptorsRequest) ProtoMessage() {}

func (x *ListNamespaceDescriptorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDescriptorsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceDescriptorsRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{40}
}

type ListNamespaceDescriptorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceDescriptor []*NamespaceDescriptor `protobuf:"bytes,1,rep,name=namespaceDescriptor" json:"namespaceDescriptor,omitempty"`
}

func (x *ListNamespaceDescriptorsResponse) Reset() {
	*x = ListNamespaceDescriptorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceDescriptorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDescriptorsResponse) ProtoMessage() {}

func (x *ListNamespaceDescriptorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDescriptorsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceDescriptorsResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{41}
}

func (x *ListNamespaceDescriptorsResponse) GetNamespaceDescriptor() []*NamespaceDescriptor {
	if x != nil {
		return x.NamespaceDescriptor
	}
	return nil
}

type ListTableDescriptorsByNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName *string `protobuf:"bytes,1,req,name=namespaceName" json:"namespaceName,omitempty"`
}

func (x *ListTableDescriptorsByNamespaceRequest) Reset() {
	*x = ListTableDescriptorsByNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTableDescriptorsByNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTableDescriptorsByNamespaceRequest) ProtoMessage() {}

func (x *ListTableDescriptorsByNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTableDescriptorsByNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListTableDescriptorsByNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{42}
}

func (x *ListTableDescriptorsByNamespaceRequest) GetNamespaceName() string {
	if x != nil && x.NamespaceName != nil {
		return *x.NamespaceName
	}
	return ""
}

type ListTableDescriptorsByNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSchema []*TableSchema `protobuf:"bytes,1,rep,name=tableSchema" json:"tableSchema,omitempty"`
}

func (x *ListTableDescriptorsByNamespaceResponse) Reset() {
	*x = ListTableDescriptorsByNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTableDescriptorsByNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTableDescriptorsByNamespaceResponse) ProtoMessage() {}

func (x *ListTableDescriptorsByNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTableDescriptorsByNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ListTableDescriptorsByNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{43}
}

func (x *ListTableDescriptorsByNamespaceResponse) GetTableSchema() []*TableSchema {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

type ListTableNamesByNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName *string `protobuf:"bytes,1,req,name=namespaceName" json:"namespaceName,omitempty"`
}

func (x *ListTableNamesByNamespaceRequest) Reset() {
	*x = ListTableNamesByNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTableNamesByNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTableNamesByNamespaceRequest) ProtoMessage() {}

func (x *ListTableNamesByNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTableNamesByNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListTableNamesByNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{44}
}

func (x *ListTableNamesByNamespaceRequest) GetNamespaceName() string {
	if x != nil && x.NamespaceName != nil {
		return *x.NamespaceName
	}
	return ""
}

type ListTableNamesByNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName []*TableName `protobuf:"bytes,1,rep,name=tableName" json:"tableName,omitempty"`
}

func (x *ListTableNamesByNamespaceResponse) Reset() {
	*x = ListTableNamesByNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTableNamesByNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTableNamesByNamespaceResponse) ProtoMessage() {}

func (x *ListTableNamesByNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTableNamesByNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ListTableNamesByNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{45}
}

func (x *ListTableNamesByNamespaceResponse) GetTableName() []*TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

type ShutdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{46}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{47}
}

type StopMasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopMasterRequest) Reset() {
	*x = StopMasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopMasterRequest) ProtoMessage() {}

func (x *StopMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopMasterRequest.ProtoReflect.Descriptor instead.
func (*StopMasterRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{48}
}

type StopMasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopMasterResponse) Reset() {
	*x = StopMasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopMasterResponse) ProtoMessage() {}

func (x *StopMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopMasterResponse.ProtoReflect.Descriptor instead.
func (*StopMasterResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{49}
}

type IsInMaintenanceModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsInMaintenanceModeRequest) Reset() {
	*x = IsInMaintenanceModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInMaintenanceModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInMaintenanceModeRequest) ProtoMessage() {}

func (x *IsInMaintenanceModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInMaintenanceModeRequest.ProtoReflect.Descriptor instead.
func (*IsInMaintenanceModeRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{50}
}

type IsInMaintenanceModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InMaintenanceMode *bool `protobuf:"varint,1,req,name=inMaintenanceMode" json:"inMaintenanceMode,omitempty"`
}

func (x *IsInMaintenanceModeResponse) Reset() {
	*x = IsInMaintenanceModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInMaintenanceModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInMaintenanceModeResponse) ProtoMessage() {}

func (x *IsInMaintenanceModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInMaintenanceModeResponse.ProtoReflect.Descriptor instead.
func (*IsInMaintenanceModeResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{51}
}

func (x *IsInMaintenanceModeResponse) GetInMaintenanceMode() bool {
	if x != nil && x.InMaintenanceMode != nil {
		return *x.InMaintenanceMode
	}
	return false
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force *bool `protobuf:"varint,1,opt,name=force" json:"force,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{52}
}

func (x *BalanceRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BalancerRan *bool `protobuf:"varint,1,req,name=balancer_ran,json=balancerRan" json:"balancer_ran,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{53}
}

func (x *BalanceResponse) GetBalancerRan() bool {
	if x != nil && x.BalancerRan != nil {
		return *x.BalancerRan
	}
	return false
}

type SetBalancerRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On          *bool `protobuf:"varint,1,req,name=on" json:"on,omitempty"`
	Synchronous *bool `protobuf:"varint,2,opt,name=synchronous" json:"synchronous,omitempty"`
}

func (x *SetBalancerRunningRequest) Reset() {
	*x = SetBalancerRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBalancerRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBalancerRunningRequest) ProtoMessage() {}

func (x *SetBalancerRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBalancerRunningRequest.ProtoReflect.Descriptor instead.
func (*SetBalancerRunningRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{54}
}

func (x *SetBalancerRunningRequest) GetOn() bool {
	if x != nil && x.On != nil {
		return *x.On
	}
	return false
}

func (x *SetBalancerRunningRequest) GetSynchronous() bool {
	if x != nil && x.Synchronous != nil {
		return *x.Synchronous
	}
	return false
}

type SetBalancerRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevBalanceValue *bool `protobuf:"varint,1,opt,name=prev_balance_value,json=prevBalanceValue" json:"prev_balance_value,omitempty"`
}

func (x *SetBalancerRunningResponse) Reset() {
	*x = SetBalancerRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBalancerRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBalancerRunningResponse) ProtoMessage() {}

func (x *SetBalancerRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBalancerRunningResponse.ProtoReflect.Descriptor instead.
func (*SetBalancerRunningResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{55}
}

func (x *SetBalancerRunningResponse) GetPrevBalanceValue() bool {
	if x != nil && x.PrevBalanceValue != nil {
		return *x.PrevBalanceValue
	}
	return false
}

type IsBalancerEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsBalancerEnabledRequest) Reset() {
	*x = IsBalancerEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBalancerEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBalancerEnabledRequest) ProtoMessage() {}

func (x *IsBalancerEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBalancerEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsBalancerEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{56}
}

type IsBalancerEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
}

func (x *IsBalancerEnabledResponse) Reset() {
	*x = IsBalancerEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBalancerEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBalancerEnabledResponse) ProtoMessage() {}

func (x *IsBalancerEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBalancerEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsBalancerEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{57}
}

func (x *IsBalancerEnabledResponse) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type SetSnapshotCleanupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
	Synchronous *bool `protobuf:"varint,2,opt,name=synchronous" json:"synchronous,omitempty"`
}

func (x *SetSnapshotCleanupRequest) Reset() {
	*x = SetSnapshotCleanupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSnapshotCleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSnapshotCleanupRequest) ProtoMessage() {}

func (x *SetSnapshotCleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSnapshotCleanupRequest.ProtoReflect.Descriptor instead.
func (*SetSnapshotCleanupRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{58}
}

func (x *SetSnapshotCleanupRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *SetSnapshotCleanupRequest) GetSynchronous() bool {
	if x != nil && x.Synchronous != nil {
		return *x.Synchronous
	}
	return false
}

type SetSnapshotCleanupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevSnapshotCleanup *bool `protobuf:"varint,1,req,name=prev_snapshot_cleanup,json=prevSnapshotCleanup" json:"prev_snapshot_cleanup,omitempty"`
}

func (x *SetSnapshotCleanupResponse) Reset() {
	*x = SetSnapshotCleanupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSnapshotCleanupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSnapshotCleanupResponse) ProtoMessage() {}

func (x *SetSnapshotCleanupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSnapshotCleanupResponse.ProtoReflect.Descriptor instead.
func (*SetSnapshotCleanupResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{59}
}

func (x *SetSnapshotCleanupResponse) GetPrevSnapshotCleanup() bool {
	if x != nil && x.PrevSnapshotCleanup != nil {
		return *x.PrevSnapshotCleanup
	}
	return false
}

type IsSnapshotCleanupEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsSnapshotCleanupEnabledRequest) Reset() {
	*x = IsSnapshotCleanupEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSnapshotCleanupEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSnapshotCleanupEnabledRequest) ProtoMessage() {}

func (x *IsSnapshotCleanupEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSnapshotCleanupEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsSnapshotCleanupEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{60}
}

type IsSnapshotCleanupEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
}

func (x *IsSnapshotCleanupEnabledResponse) Reset() {
	*x = IsSnapshotCleanupEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSnapshotCleanupEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSnapshotCleanupEnabledResponse) ProtoMessage() {}

func (x *IsSnapshotCleanupEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSnapshotCleanupEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsSnapshotCleanupEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{61}
}

func (x *IsSnapshotCleanupEnabledResponse) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type SetSplitOrMergeEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     *bool              `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
	Synchronous *bool              `protobuf:"varint,2,opt,name=synchronous" json:"synchronous,omitempty"`
	SwitchTypes []MasterSwitchType `protobuf:"varint,3,rep,name=switch_types,json=switchTypes,enum=pb.MasterSwitchType" json:"switch_types,omitempty"`
}

func (x *SetSplitOrMergeEnabledRequest) Reset() {
	*x = SetSplitOrMergeEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSplitOrMergeEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSplitOrMergeEnabledRequest) ProtoMessage() {}

func (x *SetSplitOrMergeEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSplitOrMergeEnabledRequest.ProtoReflect.Descriptor instead.
func (*SetSplitOrMergeEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{62}
}

func (x *SetSplitOrMergeEnabledRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *SetSplitOrMergeEnabledRequest) GetSynchronous() bool {
	if x != nil && x.Synchronous != nil {
		return *x.Synchronous
	}
	return false
}

func (x *SetSplitOrMergeEnabledRequest) GetSwitchTypes() []MasterSwitchType {
	if x != nil {
		return x.SwitchTypes
	}
	return nil
}

type SetSplitOrMergeEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevValue []bool `protobuf:"varint,1,rep,name=prev_value,json=prevValue" json:"prev_value,omitempty"`
}

func (x *SetSplitOrMergeEnabledResponse) Reset() {
	*x = SetSplitOrMergeEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSplitOrMergeEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSplitOrMergeEnabledResponse) ProtoMessage() {}

func (x *SetSplitOrMergeEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSplitOrMergeEnabledResponse.ProtoReflect.Descriptor instead.
func (*SetSplitOrMergeEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{63}
}

func (x *SetSplitOrMergeEnabledResponse) GetPrevValue() []bool {
	if x != nil {
		return x.PrevValue
	}
	return nil
}

type IsSplitOrMergeEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwitchType *MasterSwitchType `protobuf:"varint,1,req,name=switch_type,json=switchType,enum=pb.MasterSwitchType" json:"switch_type,omitempty"`
}

func (x *IsSplitOrMergeEnabledRequest) Reset() {
	*x = IsSplitOrMergeEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSplitOrMergeEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSplitOrMergeEnabledRequest) ProtoMessage() {}

func (x *IsSplitOrMergeEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSplitOrMergeEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsSplitOrMergeEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{64}
}

func (x *IsSplitOrMergeEnabledRequest) GetSwitchType() MasterSwitchType {
	if x != nil && x.SwitchType != nil {
		return *x.SwitchType
	}
	return MasterSwitchType_SPLIT
}

type IsSplitOrMergeEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
}

func (x *IsSplitOrMergeEnabledResponse) Reset() {
	*x = IsSplitOrMergeEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSplitOrMergeEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSplitOrMergeEnabledResponse) ProtoMessage() {}

func (x *IsSplitOrMergeEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSplitOrMergeEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsSplitOrMergeEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{65}
}

func (x *IsSplitOrMergeEnabledResponse) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type NormalizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNames []*TableName `protobuf:"bytes,1,rep,name=table_names,json=tableNames" json:"table_names,omitempty"`
	Regex      *string      `protobuf:"bytes,2,opt,name=regex" json:"regex,omitempty"`
	Namespace  *string      `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
}

func (x *NormalizeRequest) Reset() {
	*x = NormalizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalizeRequest) ProtoMessage() {}

func (x *NormalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalizeRequest.ProtoReflect.Descriptor instead.
func (*NormalizeRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{66}
}

func (x *NormalizeRequest) GetTableNames() []*TableName {
	if x != nil {
		return x.TableNames
	}
	return nil
}

func (x *NormalizeRequest) GetRegex() string {
	if x != nil && x.Regex != nil {
		return *x.Regex
	}
	return ""
}

func (x *NormalizeRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

type NormalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NormalizerRan *bool `protobuf:"varint,1,req,name=normalizer_ran,json=normalizerRan" json:"normalizer_ran,omitempty"`
}

func (x *NormalizeResponse) Reset() {
	*x = NormalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalizeResponse) ProtoMessage() {}

func (x *NormalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalizeResponse.ProtoReflect.Descriptor instead.
func (*NormalizeResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{67}
}

func (x *NormalizeResponse) GetNormalizerRan() bool {
	if x != nil && x.NormalizerRan != nil {
		return *x.NormalizerRan
	}
	return false
}

type SetNormalizerRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On *bool `protobuf:"varint,1,req,name=on" json:"on,omitempty"`
}

func (x *SetNormalizerRunningRequest) Reset() {
	*x = SetNormalizerRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNormalizerRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNormalizerRunningRequest) ProtoMessage() {}

func (x *SetNormalizerRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNormalizerRunningRequest.ProtoReflect.Descriptor instead.
func (*SetNormalizerRunningRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{68}
}

func (x *SetNormalizerRunningRequest) GetOn() bool {
	if x != nil && x.On != nil {
		return *x.On
	}
	return false
}

type SetNormalizerRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevNormalizerValue *bool `protobuf:"varint,1,opt,name=prev_normalizer_value,json=prevNormalizerValue" json:"prev_normalizer_value,omitempty"`
}

func (x *SetNormalizerRunningResponse) Reset() {
	*x = SetNormalizerRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNormalizerRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNormalizerRunningResponse) ProtoMessage() {}

func (x *SetNormalizerRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNormalizerRunningResponse.ProtoReflect.Descriptor instead.
func (*SetNormalizerRunningResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{69}
}

func (x *SetNormalizerRunningResponse) GetPrevNormalizerValue() bool {
	if x != nil && x.PrevNormalizerValue != nil {
		return *x.PrevNormalizerValue
	}
	return false
}

type IsNormalizerEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsNormalizerEnabledRequest) Reset() {
	*x = IsNormalizerEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNormalizerEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNormalizerEnabledRequest) ProtoMessage() {}

func (x *IsNormalizerEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNormalizerEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsNormalizerEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{70}
}

type IsNormalizerEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
}

func (x *IsNormalizerEnabledResponse) Reset() {
	*x = IsNormalizerEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNormalizerEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNormalizerEnabledResponse) ProtoMessage() {}

func (x *IsNormalizerEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNormalizerEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsNormalizerEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{71}
}

func (x *IsNormalizerEnabledResponse) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type RunHbckChoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunHbckChoreRequest) Reset() {
	*x = RunHbckChoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunHbckChoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunHbckChoreRequest) ProtoMessage() {}

func (x *RunHbckChoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunHbckChoreRequest.ProtoReflect.Descriptor instead.
func (*RunHbckChoreRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{72}
}

type RunHbckChoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ran *bool `protobuf:"varint,1,req,name=ran" json:"ran,omitempty"`
}

func (x *RunHbckChoreResponse) Reset() {
	*x = RunHbckChoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunHbckChoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunHbckChoreResponse) ProtoMessage() {}

func (x *RunHbckChoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunHbckChoreResponse.ProtoReflect.Descriptor instead.
func (*RunHbckChoreResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{73}
}

func (x *RunHbckChoreResponse) GetRan() bool {
	if x != nil && x.Ran != nil {
		return *x.Ran
	}
	return false
}

type RunCatalogScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunCatalogScanRequest) Reset() {
	*x = RunCatalogScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCatalogScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCatalogScanRequest) ProtoMessage() {}

func (x *RunCatalogScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCatalogScanRequest.ProtoReflect.Descriptor instead.
func (*RunCatalogScanRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{74}
}

type RunCatalogScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is how many archiving tasks we started as a result of this scan.
	ScanResult *int32 `protobuf:"varint,1,opt,name=scan_result,json=scanResult" json:"scan_result,omitempty"`
}

func (x *RunCatalogScanResponse) Reset() {
	*x = RunCatalogScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCatalogScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCatalogScanResponse) ProtoMessage() {}

func (x *RunCatalogScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCatalogScanResponse.ProtoReflect.Descriptor instead.
func (*RunCatalogScanResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{75}
}

func (x *RunCatalogScanResponse) GetScanResult() int32 {
	if x != nil && x.ScanResult != nil {
		return *x.ScanResult
	}
	return 0
}

type EnableCatalogJanitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *bool `protobuf:"varint,1,req,name=enable" json:"enable,omitempty"`
}

func (x *EnableCatalogJanitorRequest) Reset() {
	*x = EnableCatalogJanitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableCatalogJanitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableCatalogJanitorRequest) ProtoMessage() {}

func (x *EnableCatalogJanitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableCatalogJanitorRequest.ProtoReflect.Descriptor instead.
func (*EnableCatalogJanitorRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{76}
}

func (x *EnableCatalogJanitorRequest) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

type EnableCatalogJanitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevValue *bool `protobuf:"varint,1,opt,name=prev_value,json=prevValue" json:"prev_value,omitempty"`
}

func (x *EnableCatalogJanitorResponse) Reset() {
	*x = EnableCatalogJanitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableCatalogJanitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableCatalogJanitorResponse) ProtoMessage() {}

func (x *EnableCatalogJanitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableCatalogJanitorResponse.ProtoReflect.Descriptor instead.
func (*EnableCatalogJanitorResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{77}
}

func (x *EnableCatalogJanitorResponse) GetPrevValue() bool {
	if x != nil && x.PrevValue != nil {
		return *x.PrevValue
	}
	return false
}

type IsCatalogJanitorEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsCatalogJanitorEnabledRequest) Reset() {
	*x = IsCatalogJanitorEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCatalogJanitorEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCatalogJanitorEnabledRequest) ProtoMessage() {}

func (x *IsCatalogJanitorEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCatalogJanitorEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsCatalogJanitorEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{78}
}

type IsCatalogJanitorEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *IsCatalogJanitorEnabledResponse) Reset() {
	*x = IsCatalogJanitorEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCatalogJanitorEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCatalogJanitorEnabledResponse) ProtoMessage() {}

func (x *IsCatalogJanitorEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCatalogJanitorEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsCatalogJanitorEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{79}
}

func (x *IsCatalogJanitorEnabledResponse) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type RunCleanerChoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunCleanerChoreRequest) Reset() {
	*x = RunCleanerChoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCleanerChoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCleanerChoreRequest) ProtoMessage() {}

func (x *RunCleanerChoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCleanerChoreRequest.ProtoReflect.Descriptor instead.
func (*RunCleanerChoreRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{80}
}

type RunCleanerChoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CleanerChoreRan *bool `protobuf:"varint,1,req,name=cleaner_chore_ran,json=cleanerChoreRan" json:"cleaner_chore_ran,omitempty"`
}

func (x *RunCleanerChoreResponse) Reset() {
	*x = RunCleanerChoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCleanerChoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCleanerChoreResponse) ProtoMessage() {}

func (x *RunCleanerChoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCleanerChoreResponse.ProtoReflect.Descriptor instead.
func (*RunCleanerChoreResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{81}
}

func (x *RunCleanerChoreResponse) GetCleanerChoreRan() bool {
	if x != nil && x.CleanerChoreRan != nil {
		return *x.CleanerChoreRan
	}
	return false
}

type SetCleanerChoreRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On *bool `protobuf:"varint,1,req,name=on" json:"on,omitempty"`
}

func (x *SetCleanerChoreRunningRequest) Reset() {
	*x = SetCleanerChoreRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCleanerChoreRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCleanerChoreRunningRequest) ProtoMessage() {}

func (x *SetCleanerChoreRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCleanerChoreRunningRequest.ProtoReflect.Descriptor instead.
func (*SetCleanerChoreRunningRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{82}
}

func (x *SetCleanerChoreRunningRequest) GetOn() bool {
	if x != nil && x.On != nil {
		return *x.On
	}
	return false
}

type SetCleanerChoreRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevValue *bool `protobuf:"varint,1,opt,name=prev_value,json=prevValue" json:"prev_value,omitempty"`
}

func (x *SetCleanerChoreRunningResponse) Reset() {
	*x = SetCleanerChoreRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCleanerChoreRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCleanerChoreRunningResponse) ProtoMessage() {}

func (x *SetCleanerChoreRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCleanerChoreRunningResponse.ProtoReflect.Descriptor instead.
func (*SetCleanerChoreRunningResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{83}
}

func (x *SetCleanerChoreRunningResponse) GetPrevValue() bool {
	if x != nil && x.PrevValue != nil {
		return *x.PrevValue
	}
	return false
}

type IsCleanerChoreEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsCleanerChoreEnabledRequest) Reset() {
	*x = IsCleanerChoreEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCleanerChoreEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCleanerChoreEnabledRequest) ProtoMessage() {}

func (x *IsCleanerChoreEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCleanerChoreEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsCleanerChoreEnabledRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{84}
}

type IsCleanerChoreEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *IsCleanerChoreEnabledResponse) Reset() {
	*x = IsCleanerChoreEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCleanerChoreEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCleanerChoreEnabledResponse) ProtoMessage() {}

func (x *IsCleanerChoreEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCleanerChoreEnabledResponse.ProtoReflect.Descriptor instead.
func (*IsCleanerChoreEnabledResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{85}
}

func (x *IsCleanerChoreEnabledResponse) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *SnapshotDescription `protobuf:"bytes,1,req,name=snapshot" json:"snapshot,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{86}
}

func (x *SnapshotRequest) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type SnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpectedTimeout *int64 `protobuf:"varint,1,req,name=expected_timeout,json=expectedTimeout" json:"expected_timeout,omitempty"`
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{87}
}

func (x *SnapshotResponse) GetExpectedTimeout() int64 {
	if x != nil && x.ExpectedTimeout != nil {
		return *x.ExpectedTimeout
	}
	return 0
}

type GetCompletedSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCompletedSnapshotsRequest) Reset() {
	*x = GetCompletedSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompletedSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompletedSnapshotsRequest) ProtoMessage() {}

func (x *GetCompletedSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompletedSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*GetCompletedSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{88}
}

type GetCompletedSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*SnapshotDescription `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty"`
}

func (x *GetCompletedSnapshotsResponse) Reset() {
	*x = GetCompletedSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompletedSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompletedSnapshotsResponse) ProtoMessage() {}

func (x *GetCompletedSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompletedSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*GetCompletedSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{89}
}

func (x *GetCompletedSnapshotsResponse) GetSnapshots() []*SnapshotDescription {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type DeleteSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *SnapshotDescription `protobuf:"bytes,1,req,name=snapshot" json:"snapshot,omitempty"`
}

func (x *DeleteSnapshotRequest) Reset() {
	*x = DeleteSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotRequest) ProtoMessage() {}

func (x *DeleteSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotRequest.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteSnapshotRequest) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type DeleteSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSnapshotResponse) Reset() {
	*x = DeleteSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotResponse) ProtoMessage() {}

func (x *DeleteSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotResponse.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{91}
}

type RestoreSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot   *SnapshotDescription `protobuf:"bytes,1,req,name=snapshot" json:"snapshot,omitempty"`
	NonceGroup *uint64              `protobuf:"varint,2,opt,name=nonce_group,json=nonceGroup,def=0" json:"nonce_group,omitempty"`
	Nonce      *uint64              `protobuf:"varint,3,opt,name=nonce,def=0" json:"nonce,omitempty"`
	RestoreACL *bool                `protobuf:"varint,4,opt,name=restoreACL,def=0" json:"restoreACL,omitempty"`
}

// Default values for RestoreSnapshotRequest fields.
const (
	Default_RestoreSnapshotRequest_NonceGroup = uint64(0)
	Default_RestoreSnapshotRequest_Nonce      = uint64(0)
	Default_RestoreSnapshotRequest_RestoreACL = bool(false)
)

func (x *RestoreSnapshotRequest) Reset() {
	*x = RestoreSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSnapshotRequest) ProtoMessage() {}

func (x *RestoreSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSnapshotRequest.ProtoReflect.Descriptor instead.
func (*RestoreSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{92}
}

func (x *RestoreSnapshotRequest) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *RestoreSnapshotRequest) GetNonceGroup() uint64 {
	if x != nil && x.NonceGroup != nil {
		return *x.NonceGroup
	}
	return Default_RestoreSnapshotRequest_NonceGroup
}

func (x *RestoreSnapshotRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return Default_RestoreSnapshotRequest_Nonce
}

func (x *RestoreSnapshotRequest) GetRestoreACL() bool {
	if x != nil && x.RestoreACL != nil {
		return *x.RestoreACL
	}
	return Default_RestoreSnapshotRequest_RestoreACL
}

type RestoreSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,req,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *RestoreSnapshotResponse) Reset() {
	*x = RestoreSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSnapshotResponse) ProtoMessage() {}

func (x *RestoreSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSnapshotResponse.ProtoReflect.Descriptor instead.
func (*RestoreSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{93}
}

func (x *RestoreSnapshotResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

// if you don't send the snapshot, then you will get it back
// in the response (if the snapshot is done) so you can check the snapshot
type IsSnapshotDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *SnapshotDescription `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
}

func (x *IsSnapshotDoneRequest) Reset() {
	*x = IsSnapshotDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSnapshotDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSnapshotDoneRequest) ProtoMessage() {}

func (x *IsSnapshotDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSnapshotDoneRequest.ProtoReflect.Descriptor instead.
func (*IsSnapshotDoneRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{94}
}

func (x *IsSnapshotDoneRequest) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type IsSnapshotDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done     *bool                `protobuf:"varint,1,opt,name=done,def=0" json:"done,omitempty"`
	Snapshot *SnapshotDescription `protobuf:"bytes,2,opt,name=snapshot" json:"snapshot,omitempty"`
}

// Default values for IsSnapshotDoneResponse fields.
const (
	Default_IsSnapshotDoneResponse_Done = bool(false)
)

func (x *IsSnapshotDoneResponse) Reset() {
	*x = IsSnapshotDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSnapshotDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSnapshotDoneResponse) ProtoMessage() {}

func (x *IsSnapshotDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSnapshotDoneResponse.ProtoReflect.Descriptor instead.
func (*IsSnapshotDoneResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{95}
}

func (x *IsSnapshotDoneResponse) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return Default_IsSnapshotDoneResponse_Done
}

func (x *IsSnapshotDoneResponse) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type IsRestoreSnapshotDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *SnapshotDescription `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
}

func (x *IsRestoreSnapshotDoneRequest) Reset() {
	*x = IsRestoreSnapshotDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRestoreSnapshotDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRestoreSnapshotDoneRequest) ProtoMessage() {}

func (x *IsRestoreSnapshotDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRestoreSnapshotDoneRequest.ProtoReflect.Descriptor instead.
func (*IsRestoreSnapshotDoneRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{96}
}

func (x *IsRestoreSnapshotDoneRequest) GetSnapshot() *SnapshotDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type IsRestoreSnapshotDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done *bool `protobuf:"varint,1,opt,name=done,def=0" json:"done,omitempty"`
}

// Default values for IsRestoreSnapshotDoneResponse fields.
const (
	Default_IsRestoreSnapshotDoneResponse_Done = bool(false)
)

func (x *IsRestoreSnapshotDoneResponse) Reset() {
	*x = IsRestoreSnapshotDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRestoreSnapshotDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRestoreSnapshotDoneResponse) ProtoMessage() {}

func (x *IsRestoreSnapshotDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRestoreSnapshotDoneResponse.ProtoReflect.Descriptor instead.
func (*IsRestoreSnapshotDoneResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{97}
}

func (x *IsRestoreSnapshotDoneResponse) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return Default_IsRestoreSnapshotDoneResponse_Done
}

type GetSchemaAlterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
}

func (x *GetSchemaAlterStatusRequest) Reset() {
	*x = GetSchemaAlterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaAlterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaAlterStatusRequest) ProtoMessage() {}

func (x *GetSchemaAlterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaAlterStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaAlterStatusRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{98}
}

func (x *GetSchemaAlterStatusRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

type GetSchemaAlterStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YetToUpdateRegions *uint32 `protobuf:"varint,1,opt,name=yet_to_update_regions,json=yetToUpdateRegions" json:"yet_to_update_regions,omitempty"`
	TotalRegions       *uint32 `protobuf:"varint,2,opt,name=total_regions,json=totalRegions" json:"total_regions,omitempty"`
}

func (x *GetSchemaAlterStatusResponse) Reset() {
	*x = GetSchemaAlterStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaAlterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaAlterStatusResponse) ProtoMessage() {}

func (x *GetSchemaAlterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaAlterStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaAlterStatusResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{99}
}

func (x *GetSchemaAlterStatusResponse) GetYetToUpdateRegions() uint32 {
	if x != nil && x.YetToUpdateRegions != nil {
		return *x.YetToUpdateRegions
	}
	return 0
}

func (x *GetSchemaAlterStatusResponse) GetTotalRegions() uint32 {
	if x != nil && x.TotalRegions != nil {
		return *x.TotalRegions
	}
	return 0
}

type GetTableDescriptorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNames       []*TableName `protobuf:"bytes,1,rep,name=table_names,json=tableNames" json:"table_names,omitempty"`
	Regex            *string      `protobuf:"bytes,2,opt,name=regex" json:"regex,omitempty"`
	IncludeSysTables *bool        `protobuf:"varint,3,opt,name=include_sys_tables,json=includeSysTables,def=0" json:"include_sys_tables,omitempty"`
	Namespace        *string      `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
}

// Default values for GetTableDescriptorsRequest fields.
const (
	Default_GetTableDescriptorsRequest_IncludeSysTables = bool(false)
)

func (x *GetTableDescriptorsRequest) Reset() {
	*x = GetTableDescriptorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableDescriptorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableDescriptorsRequest) ProtoMessage() {}

func (x *GetTableDescriptorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableDescriptorsRequest.ProtoReflect.Descriptor instead.
func (*GetTableDescriptorsRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{100}
}

func (x *GetTableDescriptorsRequest) GetTableNames() []*TableName {
	if x != nil {
		return x.TableNames
	}
	return nil
}

func (x *GetTableDescriptorsRequest) GetRegex() string {
	if x != nil && x.Regex != nil {
		return *x.Regex
	}
	return ""
}

func (x *GetTableDescriptorsRequest) GetIncludeSysTables() bool {
	if x != nil && x.IncludeSysTables != nil {
		return *x.IncludeSysTables
	}
	return Default_GetTableDescriptorsRequest_IncludeSysTables
}

func (x *GetTableDescriptorsRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

type GetTableDescriptorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSchema []*TableSchema `protobuf:"bytes,1,rep,name=table_schema,json=tableSchema" json:"table_schema,omitempty"`
}

func (x *GetTableDescriptorsResponse) Reset() {
	*x = GetTableDescriptorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableDescriptorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableDescriptorsResponse) ProtoMessage() {}

func (x *GetTableDescriptorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableDescriptorsResponse.ProtoReflect.Descriptor instead.
func (*GetTableDescriptorsResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{101}
}

func (x *GetTableDescriptorsResponse) GetTableSchema() []*TableSchema {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

type GetTableNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regex            *string `protobuf:"bytes,1,opt,name=regex" json:"regex,omitempty"`
	IncludeSysTables *bool   `protobuf:"varint,2,opt,name=include_sys_tables,json=includeSysTables,def=0" json:"include_sys_tables,omitempty"`
	Namespace        *string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
}

// Default values for GetTableNamesRequest fields.
const (
	Default_GetTableNamesRequest_IncludeSysTables = bool(false)
)

func (x *GetTableNamesRequest) Reset() {
	*x = GetTableNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableNamesRequest) ProtoMessage() {}

func (x *GetTableNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableNamesRequest.ProtoReflect.Descriptor instead.
func (*GetTableNamesRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{102}
}

func (x *GetTableNamesRequest) GetRegex() string {
	if x != nil && x.Regex != nil {
		return *x.Regex
	}
	return ""
}

func (x *GetTableNamesRequest) GetIncludeSysTables() bool {
	if x != nil && x.IncludeSysTables != nil {
		return *x.IncludeSysTables
	}
	return Default_GetTableNamesRequest_IncludeSysTables
}

func (x *GetTableNamesRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

type GetTableNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNames []*TableName `protobuf:"bytes,1,rep,name=table_names,json=tableNames" json:"table_names,omitempty"`
}

func (x *GetTableNamesResponse) Reset() {
	*x = GetTableNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableNamesResponse) ProtoMessage() {}

func (x *GetTableNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableNamesResponse.ProtoReflect.Descriptor instead.
func (*GetTableNamesResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{103}
}

func (x *GetTableNamesResponse) GetTableNames() []*TableName {
	if x != nil {
		return x.TableNames
	}
	return nil
}

type GetTableStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
}

func (x *GetTableStateRequest) Reset() {
	*x = GetTableStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStateRequest) ProtoMessage() {}

func (x *GetTableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStateRequest.ProtoReflect.Descriptor instead.
func (*GetTableStateRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{104}
}

func (x *GetTableStateRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

type GetTableStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableState *TableState `protobuf:"bytes,1,req,name=table_state,json=tableState" json:"table_state,omitempty"`
}

func (x *GetTableStateResponse) Reset() {
	*x = GetTableStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStateResponse) ProtoMessage() {}

func (x *GetTableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStateResponse.ProtoReflect.Descriptor instead.
func (*GetTableStateResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{105}
}

func (x *GetTableStateResponse) GetTableState() *TableState {
	if x != nil {
		return x.TableState
	}
	return nil
}

type GetClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []Option `protobuf:"varint,1,rep,name=options,enum=pb.Option" json:"options,omitempty"`
}

func (x *GetClusterStatusRequest) Reset() {
	*x = GetClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusRequest) ProtoMessage() {}

func (x *GetClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*GetClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{106}
}

func (x *GetClusterStatusRequest) GetOptions() []Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetClusterStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterStatus *ClusterStatus `protobuf:"bytes,1,req,name=cluster_status,json=clusterStatus" json:"cluster_status,omitempty"`
}

func (x *GetClusterStatusResponse) Reset() {
	*x = GetClusterStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusResponse) ProtoMessage() {}

func (x *GetClusterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusResponse.ProtoReflect.Descriptor instead.
func (*GetClusterStatusResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{107}
}

func (x *GetClusterStatusResponse) GetClusterStatus() *ClusterStatus {
	if x != nil {
		return x.ClusterStatus
	}
	return nil
}

type IsMasterRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsMasterRunningRequest) Reset() {
	*x = IsMasterRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMasterRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMasterRunningRequest) ProtoMessage() {}

func (x *IsMasterRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMasterRunningRequest.ProtoReflect.Descriptor instead.
func (*IsMasterRunningRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{108}
}

type IsMasterRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMasterRunning *bool `protobuf:"varint,1,req,name=is_master_running,json=isMasterRunning" json:"is_master_running,omitempty"`
}

func (x *IsMasterRunningResponse) Reset() {
	*x = IsMasterRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMasterRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMasterRunningResponse) ProtoMessage() {}

func (x *IsMasterRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMasterRunningResponse.ProtoReflect.Descriptor instead.
func (*IsMasterRunningResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{109}
}

func (x *IsMasterRunningResponse) GetIsMasterRunning() bool {
	if x != nil && x.IsMasterRunning != nil {
		return *x.IsMasterRunning
	}
	return false
}

type ExecProcedureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procedure *ProcedureDescription `protobuf:"bytes,1,req,name=procedure" json:"procedure,omitempty"`
}

func (x *ExecProcedureRequest) Reset() {
	*x = ExecProcedureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProcedureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcedureRequest) ProtoMessage() {}

func (x *ExecProcedureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcedureRequest.ProtoReflect.Descriptor instead.
func (*ExecProcedureRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{110}
}

func (x *ExecProcedureRequest) GetProcedure() *ProcedureDescription {
	if x != nil {
		return x.Procedure
	}
	return nil
}

type ExecProcedureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpectedTimeout *int64 `protobuf:"varint,1,opt,name=expected_timeout,json=expectedTimeout" json:"expected_timeout,omitempty"`
	ReturnData      []byte `protobuf:"bytes,2,opt,name=return_data,json=returnData" json:"return_data,omitempty"`
}

func (x *ExecProcedureResponse) Reset() {
	*x = ExecProcedureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProcedureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcedureResponse) ProtoMessage() {}

func (x *ExecProcedureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcedureResponse.ProtoReflect.Descriptor instead.
func (*ExecProcedureResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{111}
}

func (x *ExecProcedureResponse) GetExpectedTimeout() int64 {
	if x != nil && x.ExpectedTimeout != nil {
		return *x.ExpectedTimeout
	}
	return 0
}

func (x *ExecProcedureResponse) GetReturnData() []byte {
	if x != nil {
		return x.ReturnData
	}
	return nil
}

type IsProcedureDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procedure *ProcedureDescription `protobuf:"bytes,1,opt,name=procedure" json:"procedure,omitempty"`
}

func (x *IsProcedureDoneRequest) Reset() {
	*x = IsProcedureDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsProcedureDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsProcedureDoneRequest) ProtoMessage() {}

func (x *IsProcedureDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsProcedureDoneRequest.ProtoReflect.Descriptor instead.
func (*IsProcedureDoneRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{112}
}

func (x *IsProcedureDoneRequest) GetProcedure() *ProcedureDescription {
	if x != nil {
		return x.Procedure
	}
	return nil
}

type IsProcedureDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done     *bool                 `protobuf:"varint,1,opt,name=done,def=0" json:"done,omitempty"`
	Snapshot *ProcedureDescription `protobuf:"bytes,2,opt,name=snapshot" json:"snapshot,omitempty"`
}

// Default values for IsProcedureDoneResponse fields.
const (
	Default_IsProcedureDoneResponse_Done = bool(false)
)

func (x *IsProcedureDoneResponse) Reset() {
	*x = IsProcedureDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsProcedureDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsProcedureDoneResponse) ProtoMessage() {}

func (x *IsProcedureDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsProcedureDoneResponse.ProtoReflect.Descriptor instead.
func (*IsProcedureDoneResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{113}
}

func (x *IsProcedureDoneResponse) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return Default_IsProcedureDoneResponse_Done
}

func (x *IsProcedureDoneResponse) GetSnapshot() *ProcedureDescription {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type GetProcedureResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,req,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *GetProcedureResultRequest) Reset() {
	*x = GetProcedureResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcedureResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcedureResultRequest) ProtoMessage() {}

func (x *GetProcedureResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcedureResultRequest.ProtoReflect.Descriptor instead.
func (*GetProcedureResultRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{114}
}

func (x *GetProcedureResultRequest) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type GetProcedureResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         *GetProcedureResultResponse_State `protobuf:"varint,1,req,name=state,enum=pb.GetProcedureResultResponse_State" json:"state,omitempty"`
	SubmittedTime *uint64                           `protobuf:"varint,2,opt,name=submitted_time,json=submittedTime" json:"submitted_time,omitempty"`
	LastUpdate    *uint64                           `protobuf:"varint,3,opt,name=last_update,json=lastUpdate" json:"last_update,omitempty"`
	Result        []byte                            `protobuf:"bytes,4,opt,name=result" json:"result,omitempty"`
	Exception     *ForeignExceptionMessage          `protobuf:"bytes,5,opt,name=exception" json:"exception,omitempty"`
}

func (x *GetProcedureResultResponse) Reset() {
	*x = GetProcedureResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcedureResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcedureResultResponse) ProtoMessage() {}

func (x *GetProcedureResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcedureResultResponse.ProtoReflect.Descriptor instead.
func (*GetProcedureResultResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{115}
}

func (x *GetProcedureResultResponse) GetState() GetProcedureResultResponse_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return GetProcedureResultResponse_NOT_FOUND
}

func (x *GetProcedureResultResponse) GetSubmittedTime() uint64 {
	if x != nil && x.SubmittedTime != nil {
		return *x.SubmittedTime
	}
	return 0
}

func (x *GetProcedureResultResponse) GetLastUpdate() uint64 {
	if x != nil && x.LastUpdate != nil {
		return *x.LastUpdate
	}
	return 0
}

func (x *GetProcedureResultResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetProcedureResultResponse) GetException() *ForeignExceptionMessage {
	if x != nil {
		return x.Exception
	}
	return nil
}

type AbortProcedureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId                *uint64 `protobuf:"varint,1,req,name=proc_id,json=procId" json:"proc_id,omitempty"`
	MayInterruptIfRunning *bool   `protobuf:"varint,2,opt,name=mayInterruptIfRunning,def=1" json:"mayInterruptIfRunning,omitempty"`
}

// Default values for AbortProcedureRequest fields.
const (
	Default_AbortProcedureRequest_MayInterruptIfRunning = bool(true)
)

func (x *AbortProcedureRequest) Reset() {
	*x = AbortProcedureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortProcedureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortProcedureRequest) ProtoMessage() {}

func (x *AbortProcedureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortProcedureRequest.ProtoReflect.Descriptor instead.
func (*AbortProcedureRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{116}
}

func (x *AbortProcedureRequest) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

func (x *AbortProcedureRequest) GetMayInterruptIfRunning() bool {
	if x != nil && x.MayInterruptIfRunning != nil {
		return *x.MayInterruptIfRunning
	}
	return Default_AbortProcedureRequest_MayInterruptIfRunning
}

type AbortProcedureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsProcedureAborted *bool `protobuf:"varint,1,req,name=is_procedure_aborted,json=isProcedureAborted" json:"is_procedure_aborted,omitempty"`
}

func (x *AbortProcedureResponse) Reset() {
	*x = AbortProcedureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortProcedureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortProcedureResponse) ProtoMessage() {}

func (x *AbortProcedureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortProcedureResponse.ProtoReflect.Descriptor instead.
func (*AbortProcedureResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{117}
}

func (x *AbortProcedureResponse) GetIsProcedureAborted() bool {
	if x != nil && x.IsProcedureAborted != nil {
		return *x.IsProcedureAborted
	}
	return false
}

type GetProceduresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProceduresRequest) Reset() {
	*x = GetProceduresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProceduresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProceduresRequest) ProtoMessage() {}

func (x *GetProceduresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProceduresRequest.ProtoReflect.Descriptor instead.
func (*GetProceduresRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{118}
}

type GetProceduresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procedure []*Procedure `protobuf:"bytes,1,rep,name=procedure" json:"procedure,omitempty"`
}

func (x *GetProceduresResponse) Reset() {
	*x = GetProceduresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProceduresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProceduresResponse) ProtoMessage() {}

func (x *GetProceduresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProceduresResponse.ProtoReflect.Descriptor instead.
func (*GetProceduresResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{119}
}

func (x *GetProceduresResponse) GetProcedure() []*Procedure {
	if x != nil {
		return x.Procedure
	}
	return nil
}

type SetQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName      *string            `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	UserGroup     *string            `protobuf:"bytes,2,opt,name=user_group,json=userGroup" json:"user_group,omitempty"`
	Namespace     *string            `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	TableName     *TableName         `protobuf:"bytes,4,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	RemoveAll     *bool              `protobuf:"varint,5,opt,name=remove_all,json=removeAll" json:"remove_all,omitempty"`
	BypassGlobals *bool              `protobuf:"varint,6,opt,name=bypass_globals,json=bypassGlobals" json:"bypass_globals,omitempty"`
	Throttle      *ThrottleRequest   `protobuf:"bytes,7,opt,name=throttle" json:"throttle,omitempty"`
	SpaceLimit    *SpaceLimitRequest `protobuf:"bytes,8,opt,name=space_limit,json=spaceLimit" json:"space_limit,omitempty"`
	RegionServer  *string            `protobuf:"bytes,9,opt,name=region_server,json=regionServer" json:"region_server,omitempty"`
}

func (x *SetQuotaRequest) Reset() {
	*x = SetQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaRequest) ProtoMessage() {}

func (x *SetQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaRequest.ProtoReflect.Descriptor instead.
func (*SetQuotaRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{120}
}

func (x *SetQuotaRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *SetQuotaRequest) GetUserGroup() string {
	if x != nil && x.UserGroup != nil {
		return *x.UserGroup
	}
	return ""
}

func (x *SetQuotaRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *SetQuotaRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *SetQuotaRequest) GetRemoveAll() bool {
	if x != nil && x.RemoveAll != nil {
		return *x.RemoveAll
	}
	return false
}

func (x *SetQuotaRequest) GetBypassGlobals() bool {
	if x != nil && x.BypassGlobals != nil {
		return *x.BypassGlobals
	}
	return false
}

func (x *SetQuotaRequest) GetThrottle() *ThrottleRequest {
	if x != nil {
		return x.Throttle
	}
	return nil
}

func (x *SetQuotaRequest) GetSpaceLimit() *SpaceLimitRequest {
	if x != nil {
		return x.SpaceLimit
	}
	return nil
}

func (x *SetQuotaRequest) GetRegionServer() string {
	if x != nil && x.RegionServer != nil {
		return *x.RegionServer
	}
	return ""
}

type SetQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetQuotaResponse) Reset() {
	*x = SetQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaResponse) ProtoMessage() {}

func (x *SetQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaResponse.ProtoReflect.Descriptor instead.
func (*SetQuotaResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{121}
}

type MajorCompactionTimestampRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
}

func (x *MajorCompactionTimestampRequest) Reset() {
	*x = MajorCompactionTimestampRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MajorCompactionTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MajorCompactionTimestampRequest) ProtoMessage() {}

func (x *MajorCompactionTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MajorCompactionTimestampRequest.ProtoReflect.Descriptor instead.
func (*MajorCompactionTimestampRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{122}
}

func (x *MajorCompactionTimestampRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

type MajorCompactionTimestampForRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
}

func (x *MajorCompactionTimestampForRegionRequest) Reset() {
	*x = MajorCompactionTimestampForRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MajorCompactionTimestampForRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MajorCompactionTimestampForRegionRequest) ProtoMessage() {}

func (x *MajorCompactionTimestampForRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MajorCompactionTimestampForRegionRequest.ProtoReflect.Descriptor instead.
func (*MajorCompactionTimestampForRegionRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{123}
}

func (x *MajorCompactionTimestampForRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

type MajorCompactionTimestampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompactionTimestamp *int64 `protobuf:"varint,1,req,name=compaction_timestamp,json=compactionTimestamp" json:"compaction_timestamp,omitempty"`
}

func (x *MajorCompactionTimestampResponse) Reset() {
	*x = MajorCompactionTimestampResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MajorCompactionTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MajorCompactionTimestampResponse) ProtoMessage() {}

func (x *MajorCompactionTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MajorCompactionTimestampResponse.ProtoReflect.Descriptor instead.
func (*MajorCompactionTimestampResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{124}
}

func (x *MajorCompactionTimestampResponse) GetCompactionTimestamp() int64 {
	if x != nil && x.CompactionTimestamp != nil {
		return *x.CompactionTimestamp
	}
	return 0
}

type SecurityCapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecurityCapabilitiesRequest) Reset() {
	*x = SecurityCapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityCapabilitiesRequest) ProtoMessage() {}

func (x *SecurityCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*SecurityCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{125}
}

type SecurityCapabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities []SecurityCapabilitiesResponse_Capability `protobuf:"varint,1,rep,name=capabilities,enum=pb.SecurityCapabilitiesResponse_Capability" json:"capabilities,omitempty"`
}

func (x *SecurityCapabilitiesResponse) Reset() {
	*x = SecurityCapabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Master_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityCapabilitiesResponse) ProtoMessage() {}

func (x *SecurityCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Master_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*SecurityCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_Master_proto_rawDescGZIP(), []int{126}
}

func (x *SecurityCapabilitiesResponse) GetCapabilities() []SecurityCapabilitiesResponse_Capability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

var File_Master_proto protoreflect.FileDescriptor

var file_Master_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x0b, 0x48, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x63, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2f, 0x0a,
	0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x7a,
	0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa7, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x08, 0x66, 0x6f,
	0x72, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x19, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64,
	0x22, 0x65, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x61, 0x0a, 0x15, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x14,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x22, 0x17, 0x0a, 0x15, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x5f, 0x72, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x6f, 0x77, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x33, 0x0a, 0x18, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2e, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x7f, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2e,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xaf,
	0x01, 0x0a, 0x14, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x22, 0x30, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63,
	0x49, 0x64, 0x22, 0x7f, 0x0a, 0x12, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x63, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0c,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x2e, 0x0a,
	0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xa0, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x13,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x22, 0x32, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x63, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x32, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0b, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x17, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x26, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x27, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x48, 0x0a, 0x20, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x49, 0x73, 0x49, 0x6e, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1b, 0x49, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x11, 0x69, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x0f, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x22, 0x4d, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x22,
	0x4a, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x49,
	0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x19, 0x49, 0x73, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x57,
	0x0a, 0x19, 0x53, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x22, 0x21, 0x0a, 0x1f, 0x49, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x20,
	0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75,
	0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x53,
	0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x6e,
	0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x3f, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x55, 0x0a, 0x1c, 0x49, 0x73, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x1d, 0x49, 0x73, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x76, 0x0a, 0x10, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x3a, 0x0a, 0x11,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x5f,
	0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x22, 0x2d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x49,
	0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x1b, 0x49, 0x73, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x48, 0x62, 0x63, 0x6b, 0x43, 0x68, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x75, 0x6e,
	0x48, 0x62, 0x63, 0x6b, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x03,
	0x72, 0x61, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x16,
	0x52, 0x75, 0x6e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3d,
	0x0a, 0x1c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a,
	0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a,
	0x1e, 0x49, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x37, 0x0a, 0x1f, 0x49, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x75, 0x6e, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72,
	0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x65,
	0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x22, 0x2f, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x1e, 0x53, 0x65,
	0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x49,
	0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x1d, 0x49,
	0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x46, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x3d, 0x0a, 0x10, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x22, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x41, 0x43, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x43, 0x4c, 0x22, 0x32, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49,
	0x64, 0x22, 0x4c, 0x0a, 0x15, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22,
	0x68, 0x0a, 0x16, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x53, 0x0a, 0x1c, 0x49, 0x73, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x3a,
	0x0a, 0x1d, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x79, 0x65, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x79, 0x65, 0x74, 0x54, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xb5, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x12, 0x33, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x73, 0x79, 0x73, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x53, 0x79, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x7f, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x33, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x53, 0x79, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x49,
	0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x14,
	0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x15,
	0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x50, 0x0a, 0x16, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x22, 0x6a, 0x0a, 0x17, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22,
	0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x39, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x22, 0x6c,
	0x0a, 0x15, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x15, 0x6d, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74,
	0x49, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x15, 0x6d, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72,
	0x75, 0x70, 0x74, 0x49, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x4a, 0x0a, 0x16,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x44, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x79, 0x70, 0x61, 0x73,
	0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x1f, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x28, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x20, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x1d, 0x0a, 0x1b, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x1c, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a,
	0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x53,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10,
	0x04, 0x2a, 0x28, 0x0a, 0x10, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x01, 0x32, 0xa7, 0x27, 0x0a, 0x0d,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x11, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d,
	0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x19, 0x49, 0x73, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x49, 0x6e,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x49, 0x6e,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x49, 0x73, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x73, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x72, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x49, 0x73, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x49, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a,
	0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x61, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x4a, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x75, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72,
	0x43, 0x68, 0x6f, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72,
	0x65, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43,
	0x68, 0x6f, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72,
	0x43, 0x68, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x6f,
	0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75,
	0x70, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x18, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x14, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x49, 0x73,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7a, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x1f, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x28, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x6f, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x49, 0x0a, 0x31, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x48, 0x01, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_Master_proto_rawDescOnce sync.Once
	file_Master_proto_rawDescData = file_Master_proto_rawDesc
)

func file_Master_proto_rawDescGZIP() []byte {
	file_Master_proto_rawDescOnce.Do(func() {
		file_Master_proto_rawDescData = protoimpl.X.CompressGZIP(file_Master_proto_rawDescData)
	})
	return file_Master_proto_rawDescData
}

var file_Master_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_Master_proto_msgTypes = make([]protoimpl.MessageInfo, 127)
var file_Master_proto_goTypes = []interface{}{
	(MasterSwitchType)(0),                            // 0: pb.MasterSwitchType
	(GetProcedureResultResponse_State)(0),            // 1: pb.GetProcedureResultResponse.State
	(SecurityCapabilitiesResponse_Capability)(0),     // 2: pb.SecurityCapabilitiesResponse.Capability
	(*AddColumnRequest)(nil),                         // 3: pb.AddColumnRequest
	(*AddColumnResponse)(nil),                        // 4: pb.AddColumnResponse
	(*DeleteColumnRequest)(nil),                      // 5: pb.DeleteColumnRequest
	(*DeleteColumnResponse)(nil),                     // 6: pb.DeleteColumnResponse
	(*ModifyColumnRequest)(nil),                      // 7: pb.ModifyColumnRequest
	(*ModifyColumnResponse)(nil),                     // 8: pb.ModifyColumnResponse
	(*MoveRegionRequest)(nil),                        // 9: pb.MoveRegionRequest
	(*MoveRegionResponse)(nil),                       // 10: pb.MoveRegionResponse
	(*MergeTableRegionsRequest)(nil),                 // 11: pb.MergeTableRegionsRequest
	(*MergeTableRegionsResponse)(nil),                // 12: pb.MergeTableRegionsResponse
	(*AssignRegionRequest)(nil),                      // 13: pb.AssignRegionRequest
	(*AssignRegionResponse)(nil),                     // 14: pb.AssignRegionResponse
	(*UnassignRegionRequest)(nil),                    // 15: pb.UnassignRegionRequest
	(*UnassignRegionResponse)(nil),                   // 16: pb.UnassignRegionResponse
	(*OfflineRegionRequest)(nil),                     // 17: pb.OfflineRegionRequest
	(*OfflineRegionResponse)(nil),                    // 18: pb.OfflineRegionResponse
	(*SplitTableRegionRequest)(nil),                  // 19: pb.SplitTableRegionRequest
	(*SplitTableRegionResponse)(nil),                 // 20: pb.SplitTableRegionResponse
	(*CreateTableRequest)(nil),                       // 21: pb.CreateTableRequest
	(*CreateTableResponse)(nil),                      // 22: pb.CreateTableResponse
	(*DeleteTableRequest)(nil),                       // 23: pb.DeleteTableRequest
	(*DeleteTableResponse)(nil),                      // 24: pb.DeleteTableResponse
	(*TruncateTableRequest)(nil),                     // 25: pb.TruncateTableRequest
	(*TruncateTableResponse)(nil),                    // 26: pb.TruncateTableResponse
	(*EnableTableRequest)(nil),                       // 27: pb.EnableTableRequest
	(*EnableTableResponse)(nil),                      // 28: pb.EnableTableResponse
	(*DisableTableRequest)(nil),                      // 29: pb.DisableTableRequest
	(*DisableTableResponse)(nil),                     // 30: pb.DisableTableResponse
	(*ModifyTableRequest)(nil),                       // 31: pb.ModifyTableRequest
	(*ModifyTableResponse)(nil),                      // 32: pb.ModifyTableResponse
	(*CreateNamespaceRequest)(nil),                   // 33: pb.CreateNamespaceRequest
	(*CreateNamespaceResponse)(nil),                  // 34: pb.CreateNamespaceResponse
	(*DeleteNamespaceRequest)(nil),                   // 35: pb.DeleteNamespaceRequest
	(*DeleteNamespaceResponse)(nil),                  // 36: pb.DeleteNamespaceResponse
	(*ModifyNamespaceRequest)(nil),                   // 37: pb.ModifyNamespaceRequest
	(*ModifyNamespaceResponse)(nil),                  // 38: pb.ModifyNamespaceResponse
	(*GetNamespaceDescriptorRequest)(nil),            // 39: pb.GetNamespaceDescriptorRequest
	(*GetNamespaceDescriptorResponse)(nil),           // 40: pb.GetNamespaceDescriptorResponse
	(*ListNamespacesRequest)(nil),                    // 41: pb.ListNamespacesRequest
	(*ListNamespacesResponse)(nil),                   // 42: pb.ListNamespacesResponse
	(*ListNamespaceDescriptorsRequest)(nil),          // 43: pb.ListNamespaceDescriptorsRequest
	(*ListNamespaceDescriptorsResponse)(nil),         // 44: pb.ListNamespaceDescriptorsResponse
	(*ListTableDescriptorsByNamespaceRequest)(nil),   // 45: pb.ListTableDescriptorsByNamespaceRequest
	(*ListTableDescriptorsByNamespaceResponse)(nil),  // 46: pb.ListTableDescriptorsByNamespaceResponse
	(*ListTableNamesByNamespaceRequest)(nil),         // 47: pb.ListTableNamesByNamespaceRequest
	(*ListTableNamesByNamespaceResponse)(nil),        // 48: pb.ListTableNamesByNamespaceResponse
	(*ShutdownRequest)(nil),                          // 49: pb.ShutdownRequest
	(*ShutdownResponse)(nil),                         // 50: pb.ShutdownResponse
	(*StopMasterRequest)(nil),                        // 51: pb.StopMasterRequest
	(*StopMasterResponse)(nil),                       // 52: pb.StopMasterResponse
	(*IsInMaintenanceModeRequest)(nil),               // 53: pb.IsInMaintenanceModeRequest
	(*IsInMaintenanceModeResponse)(nil),              // 54: pb.IsInMaintenanceModeResponse
	(*BalanceRequest)(nil),                           // 55: pb.BalanceRequest
	(*BalanceResponse)(nil),                          // 56: pb.BalanceResponse
	(*SetBalancerRunningRequest)(nil),                // 57: pb.SetBalancerRunningRequest
	(*SetBalancerRunningResponse)(nil),               // 58: pb.SetBalancerRunningResponse
	(*IsBalancerEnabledRequest)(nil),                 // 59: pb.IsBalancerEnabledRequest
	(*IsBalancerEnabledResponse)(nil),                // 60: pb.IsBalancerEnabledResponse
	(*SetSnapshotCleanupRequest)(nil),                // 61: pb.SetSnapshotCleanupRequest
	(*SetSnapshotCleanupResponse)(nil),               // 62: pb.SetSnapshotCleanupResponse
	(*IsSnapshotCleanupEnabledRequest)(nil),          // 63: pb.IsSnapshotCleanupEnabledRequest
	(*IsSnapshotCleanupEnabledResponse)(nil),         // 64: pb.IsSnapshotCleanupEnabledResponse
	(*SetSplitOrMergeEnabledRequest)(nil),            // 65: pb.SetSplitOrMergeEnabledRequest
	(*SetSplitOrMergeEnabledResponse)(nil),           // 66: pb.SetSplitOrMergeEnabledResponse
	(*IsSplitOrMergeEnabledRequest)(nil),             // 67: pb.IsSplitOrMergeEnabledRequest
	(*IsSplitOrMergeEnabledResponse)(nil),            // 68: pb.IsSplitOrMergeEnabledResponse
	(*NormalizeRequest)(nil),                         // 69: pb.NormalizeRequest
	(*NormalizeResponse)(nil),                        // 70: pb.NormalizeResponse
	(*SetNormalizerRunningRequest)(nil),              // 71: pb.SetNormalizerRunningRequest
	(*SetNormalizerRunningResponse)(nil),             // 72: pb.SetNormalizerRunningResponse
	(*IsNormalizerEnabledRequest)(nil),               // 73: pb.IsNormalizerEnabledRequest
	(*IsNormalizerEnabledResponse)(nil),              // 74: pb.IsNormalizerEnabledResponse
	(*RunHbckChoreRequest)(nil),                      // 75: pb.RunHbckChoreRequest
	(*RunHbckChoreResponse)(nil),                     // 76: pb.RunHbckChoreResponse
	(*RunCatalogScanRequest)(nil),                    // 77: pb.RunCatalogScanRequest
	(*RunCatalogScanResponse)(nil),                   // 78: pb.RunCatalogScanResponse
	(*EnableCatalogJanitorRequest)(nil),              // 79: pb.EnableCatalogJanitorRequest
	(*EnableCatalogJanitorResponse)(nil),             // 80: pb.EnableCatalogJanitorResponse
	(*IsCatalogJanitorEnabledRequest)(nil),           // 81: pb.IsCatalogJanitorEnabledRequest
	(*IsCatalogJanitorEnabledResponse)(nil),          // 82: pb.IsCatalogJanitorEnabledResponse
	(*RunCleanerChoreRequest)(nil),                   // 83: pb.RunCleanerChoreRequest
	(*RunCleanerChoreResponse)(nil),                  // 84: pb.RunCleanerChoreResponse
	(*SetCleanerChoreRunningRequest)(nil),            // 85: pb.SetCleanerChoreRunningRequest
	(*SetCleanerChoreRunningResponse)(nil),           // 86: pb.SetCleanerChoreRunningResponse
	(*IsCleanerChoreEnabledRequest)(nil),             // 87: pb.IsCleanerChoreEnabledRequest
	(*IsCleanerChoreEnabledResponse)(nil),            // 88: pb.IsCleanerChoreEnabledResponse
	(*SnapshotRequest)(nil),                          // 89: pb.SnapshotRequest
	(*SnapshotResponse)(nil),                         // 90: pb.SnapshotResponse
	(*GetCompletedSnapshotsRequest)(nil),             // 91: pb.GetCompletedSnapshotsRequest
	(*GetCompletedSnapshotsResponse)(nil),            // 92: pb.GetCompletedSnapshotsResponse
	(*DeleteSnapshotRequest)(nil),                    // 93: pb.DeleteSnapshotRequest
	(*DeleteSnapshotResponse)(nil),                   // 94: pb.DeleteSnapshotResponse
	(*RestoreSnapshotRequest)(nil),                   // 95: pb.RestoreSnapshotRequest
	(*RestoreSnapshotResponse)(nil),                  // 96: pb.RestoreSnapshotResponse
	(*IsSnapshotDoneRequest)(nil),                    // 97: pb.IsSnapshotDoneRequest
	(*IsSnapshotDoneResponse)(nil),                   // 98: pb.IsSnapshotDoneResponse
	(*IsRestoreSnapshotDoneRequest)(nil),             // 99: pb.IsRestoreSnapshotDoneRequest
	(*IsRestoreSnapshotDoneResponse)(nil),            // 100: pb.IsRestoreSnapshotDoneResponse
	(*GetSchemaAlterStatusRequest)(nil),              // 101: pb.GetSchemaAlterStatusRequest
	(*GetSchemaAlterStatusResponse)(nil),             // 102: pb.GetSchemaAlterStatusResponse
	(*GetTableDescriptorsRequest)(nil),               // 103: pb.GetTableDescriptorsRequest
	(*GetTableDescriptorsResponse)(nil),              // 104: pb.GetTableDescriptorsResponse
	(*GetTableNamesRequest)(nil),                     // 105: pb.GetTableNamesRequest
	(*GetTableNamesResponse)(nil),                    // 106: pb.GetTableNamesResponse
	(*GetTableStateRequest)(nil),                     // 107: pb.GetTableStateRequest
	(*GetTableStateResponse)(nil),                    // 108: pb.GetTableStateResponse
	(*GetClusterStatusRequest)(nil),                  // 109: pb.GetClusterStatusRequest
	(*GetClusterStatusResponse)(nil),                 // 110: pb.GetClusterStatusResponse
	(*IsMasterRunningRequest)(nil),                   // 111: pb.IsMasterRunningRequest
	(*IsMasterRunningResponse)(nil),                  // 112: pb.IsMasterRunningResponse
	(*ExecProcedureRequest)(nil),                     // 113: pb.ExecProcedureRequest
	(*ExecProcedureResponse)(nil),                    // 114: pb.ExecProcedureResponse
	(*IsProcedureDoneRequest)(nil),                   // 115: pb.IsProcedureDoneRequest
	(*IsProcedureDoneResponse)(nil),                  // 116: pb.IsProcedureDoneResponse
	(*GetProcedureResultRequest)(nil),                // 117: pb.GetProcedureResultRequest
	(*GetProcedureResultResponse)(nil),               // 118: pb.GetProcedureResultResponse
	(*AbortProcedureRequest)(nil),                    // 119: pb.AbortProcedureRequest
	(*AbortProcedureResponse)(nil),                   // 120: pb.AbortProcedureResponse
	(*GetProceduresRequest)(nil),                     // 121: pb.GetProceduresRequest
	(*GetProceduresResponse)(nil),                    // 122: pb.GetProceduresResponse
	(*SetQuotaRequest)(nil),                          // 123: pb.SetQuotaRequest
	(*SetQuotaResponse)(nil),                         // 124: pb.SetQuotaResponse
	(*MajorCompactionTimestampRequest)(nil),          // 125: pb.MajorCompactionTimestampRequest
	(*MajorCompactionTimestampForRegionRequest)(nil), // 126: pb.MajorCompactionTimestampForRegionRequest
	(*MajorCompactionTimestampResponse)(nil),         // 127: pb.MajorCompactionTimestampResponse
	(*SecurityCapabilitiesRequest)(nil),              // 128: pb.SecurityCapabilitiesRequest
	(*SecurityCapabilitiesResponse)(nil),             // 129: pb.SecurityCapabilitiesResponse
	(*TableName)(nil),                                // 130: pb.TableName
	(*ColumnFamilySchema)(nil),                       // 131: pb.ColumnFamilySchema
	(*RegionSpecifier)(nil),                          // 132: pb.RegionSpecifier
	(*ServerName)(nil),                               // 133: pb.ServerName
	(*RegionInfo)(nil),                               // 134: pb.RegionInfo
	(*TableSchema)(nil),                              // 135: pb.TableSchema
	(*NamespaceDescriptor)(nil),                      // 136: pb.NamespaceDescriptor
	(*SnapshotDescription)(nil),                      // 137: pb.SnapshotDescription
	(*TableState)(nil),                               // 138: pb.TableState
	(Option)(0),                                      // 139: pb.Option
	(*ClusterStatus)(nil),                            // 140: pb.ClusterStatus
	(*ProcedureDescription)(nil),                     // 141: pb.ProcedureDescription
	(*ForeignExceptionMessage)(nil),                  // 142: pb.ForeignExceptionMessage
	(*Procedure)(nil),                                // 143: pb.Procedure
	(*ThrottleRequest)(nil),                          // 144: pb.ThrottleRequest
	(*SpaceLimitRequest)(nil),                        // 145: pb.SpaceLimitRequest
	(*CoprocessorServiceRequest)(nil),                // 146: pb.CoprocessorServiceRequest
	(*CoprocessorServiceResponse)(nil),               // 147: pb.CoprocessorServiceResponse
}
var file_Master_proto_depIdxs = []int32{
	130, // 0: pb.AddColumnRequest.table_name:type_name -> pb.TableName
	131, // 1: pb.AddColumnRequest.column_families:type_name -> pb.ColumnFamilySchema
	130, // 2: pb.DeleteColumnRequest.table_name:type_name -> pb.TableName
	130, // 3: pb.ModifyColumnRequest.table_name:type_name -> pb.TableName
	131, // 4: pb.ModifyColumnRequest.column_families:type_name -> pb.ColumnFamilySchema
	132, // 5: pb.MoveRegionRequest.region:type_name -> pb.RegionSpecifier
	133, // 6: pb.MoveRegionRequest.dest_server_name:type_name -> pb.ServerName
	132, // 7: pb.MergeTableRegionsRequest.region:type_name -> pb.RegionSpecifier
	132, // 8: pb.AssignRegionRequest.region:type_name -> pb.RegionSpecifier
	132, // 9: pb.UnassignRegionRequest.region:type_name -> pb.RegionSpecifier
	132, // 10: pb.OfflineRegionRequest.region:type_name -> pb.RegionSpecifier
	134, // 11: pb.SplitTableRegionRequest.region_info:type_name -> pb.RegionInfo
	135, // 12: pb.CreateTableRequest.table_schema:type_name -> pb.TableSchema
	130, // 13: pb.DeleteTableRequest.table_name:type_name -> pb.TableName
	130, // 14: pb.TruncateTableRequest.tableName:type_name -> pb.TableName
	130, // 15: pb.EnableTableRequest.table_name:type_name -> pb.TableName
	130, // 16: pb.DisableTableRequest.table_name:type_name -> pb.TableName
	130, // 17: pb.ModifyTableRequest.table_name:type_name -> pb.TableName
	135, // 18: pb.ModifyTableRequest.table_schema:type_name -> pb.TableSchema
	136, // 19: pb.CreateNamespaceRequest.namespaceDescriptor:type_name -> pb.NamespaceDescriptor
	136, // 20: pb.ModifyNamespaceRequest.namespaceDescriptor:type_name -> pb.NamespaceDescriptor
	136, // 21: pb.GetNamespaceDescriptorResponse.namespaceDescriptor:type_name -> pb.NamespaceDescriptor
	136, // 22: pb.ListNamespaceDescriptorsResponse.namespaceDescriptor:type_name -> pb.NamespaceDescriptor
	135, // 23: pb.ListTableDescriptorsByNamespaceResponse.tableSchema:type_name -> pb.TableSchema
	130, // 24: pb.ListTableNamesByNamespaceResponse.tableName:type_name -> pb.TableName
	0,   // 25: pb.SetSplitOrMergeEnabledRequest.switch_types:type_name -> pb.MasterSwitchType
	0,   // 26: pb.IsSplitOrMergeEnabledRequest.switch_type:type_name -> pb.MasterSwitchType
	130, // 27: pb.NormalizeRequest.table_names:type_name -> pb.TableName
	137, // 28: pb.SnapshotRequest.snapshot:type_name -> pb.SnapshotDescription
	137, // 29: pb.GetCompletedSnapshotsResponse.snapshots:type_name -> pb.SnapshotDescription
	137, // 30: pb.DeleteSnapshotRequest.snapshot:type_name -> pb.SnapshotDescription
	137, // 31: pb.RestoreSnapshotRequest.snapshot:type_name -> pb.SnapshotDescription
	137, // 32: pb.IsSnapshotDoneRequest.snapshot:type_name -> pb.SnapshotDescription
	137, // 33: pb.IsSnapshotDoneResponse.snapshot:type_name -> pb.SnapshotDescription
	137, // 34: pb.IsRestoreSnapshotDoneRequest.snapshot:type_name -> pb.SnapshotDescription
	130, // 35: pb.GetSchemaAlterStatusRequest.table_name:type_name -> pb.TableName
	130, // 36: pb.GetTableDescriptorsRequest.table_names:type_name -> pb.TableName
	135, // 37: pb.GetTableDescriptorsResponse.table_schema:type_name -> pb.TableSchema
	130, // 38: pb.GetTableNamesResponse.table_names:type_name -> pb.TableName
	130, // 39: pb.GetTableStateRequest.table_name:type_name -> pb.TableName
	138, // 40: pb.GetTableStateResponse.table_state:type_name -> pb.TableState
	139, // 41: pb.GetClusterStatusRequest.options:type_name -> pb.Option
	140, // 42: pb.GetClusterStatusResponse.cluster_status:type_name -> pb.ClusterStatus
	141, // 43: pb.ExecProcedureRequest.procedure:type_name -> pb.ProcedureDescription
	141, // 44: pb.IsProcedureDoneRequest.procedure:type_name -> pb.ProcedureDescription
	141, // 45: pb.IsProcedureDoneResponse.snapshot:type_name -> pb.ProcedureDescription
	1,   // 46: pb.GetProcedureResultResponse.state:type_name -> pb.GetProcedureResultResponse.State
	142, // 47: pb.GetProcedureResultResponse.exception:type_name -> pb.ForeignExceptionMessage
	143, // 48: pb.GetProceduresResponse.procedure:type_name -> pb.Procedure
	130, // 49: pb.SetQuotaRequest.table_name:type_name -> pb.TableName
	144, // 50: pb.SetQuotaRequest.throttle:type_name -> pb.ThrottleRequest
	145, // 51: pb.SetQuotaRequest.space_limit:type_name -> pb.SpaceLimitRequest
	130, // 52: pb.MajorCompactionTimestampRequest.table_name:type_name -> pb.TableName
	132, // 53: pb.MajorCompactionTimestampForRegionRequest.region:type_name -> pb.RegionSpecifier
	2,   // 54: pb.SecurityCapabilitiesResponse.capabilities:type_name -> pb.SecurityCapabilitiesResponse.Capability
	101, // 55: pb.MasterService.GetSchemaAlterStatus:input_type -> pb.GetSchemaAlterStatusRequest
	103, // 56: pb.MasterService.GetTableDescriptors:input_type -> pb.GetTableDescriptorsRequest
	105, // 57: pb.MasterService.GetTableNames:input_type -> pb.GetTableNamesRequest
	109, // 58: pb.MasterService.GetClusterStatus:input_type -> pb.GetClusterStatusRequest
	111, // 59: pb.MasterService.IsMasterRunning:input_type -> pb.IsMasterRunningRequest
	3,   // 60: pb.MasterService.AddColumn:input_type -> pb.AddColumnRequest
	5,   // 61: pb.MasterService.DeleteColumn:input_type -> pb.DeleteColumnRequest
	7,   // 62: pb.MasterService.ModifyColumn:input_type -> pb.ModifyColumnRequest
	9,   // 63: pb.MasterService.MoveRegion:input_type -> pb.MoveRegionRequest
	11,  // 64: pb.MasterService.MergeTableRegions:input_type -> pb.MergeTableRegionsRequest
	13,  // 65: pb.MasterService.AssignRegion:input_type -> pb.AssignRegionRequest
	15,  // 66: pb.MasterService.UnassignRegion:input_type -> pb.UnassignRegionRequest
	17,  // 67: pb.MasterService.OfflineRegion:input_type -> pb.OfflineRegionRequest
	19,  // 68: pb.MasterService.SplitRegion:input_type -> pb.SplitTableRegionRequest
	23,  // 69: pb.MasterService.DeleteTable:input_type -> pb.DeleteTableRequest
	25,  // 70: pb.MasterService.truncateTable:input_type -> pb.TruncateTableRequest
	27,  // 71: pb.MasterService.EnableTable:input_type -> pb.EnableTableRequest
	29,  // 72: pb.MasterService.DisableTable:input_type -> pb.DisableTableRequest
	31,  // 73: pb.MasterService.ModifyTable:input_type -> pb.ModifyTableRequest
	21,  // 74: pb.MasterService.CreateTable:input_type -> pb.CreateTableRequest
	49,  // 75: pb.MasterService.Shutdown:input_type -> pb.ShutdownRequest
	51,  // 76: pb.MasterService.StopMaster:input_type -> pb.StopMasterRequest
	53,  // 77: pb.MasterService.IsMasterInMaintenanceMode:input_type -> pb.IsInMaintenanceModeRequest
	55,  // 78: pb.MasterService.Balance:input_type -> pb.BalanceRequest
	57,  // 79: pb.MasterService.SetBalancerRunning:input_type -> pb.SetBalancerRunningRequest
	59,  // 80: pb.MasterService.IsBalancerEnabled:input_type -> pb.IsBalancerEnabledRequest
	65,  // 81: pb.MasterService.SetSplitOrMergeEnabled:input_type -> pb.SetSplitOrMergeEnabledRequest
	67,  // 82: pb.MasterService.IsSplitOrMergeEnabled:input_type -> pb.IsSplitOrMergeEnabledRequest
	69,  // 83: pb.MasterService.Normalize:input_type -> pb.NormalizeRequest
	71,  // 84: pb.MasterService.SetNormalizerRunning:input_type -> pb.SetNormalizerRunningRequest
	73,  // 85: pb.MasterService.IsNormalizerEnabled:input_type -> pb.IsNormalizerEnabledRequest
	77,  // 86: pb.MasterService.RunCatalogScan:input_type -> pb.RunCatalogScanRequest
	79,  // 87: pb.MasterService.EnableCatalogJanitor:input_type -> pb.EnableCatalogJanitorRequest
	81,  // 88: pb.MasterService.IsCatalogJanitorEnabled:input_type -> pb.IsCatalogJanitorEnabledRequest
	83,  // 89: pb.MasterService.RunCleanerChore:input_type -> pb.RunCleanerChoreRequest
	85,  // 90: pb.MasterService.SetCleanerChoreRunning:input_type -> pb.SetCleanerChoreRunningRequest
	87,  // 91: pb.MasterService.IsCleanerChoreEnabled:input_type -> pb.IsCleanerChoreEnabledRequest
	146, // 92: pb.MasterService.ExecMasterService:input_type -> pb.CoprocessorServiceRequest
	89,  // 93: pb.MasterService.Snapshot:input_type -> pb.SnapshotRequest
	91,  // 94: pb.MasterService.GetCompletedSnapshots:input_type -> pb.GetCompletedSnapshotsRequest
	93,  // 95: pb.MasterService.DeleteSnapshot:input_type -> pb.DeleteSnapshotRequest
	97,  // 96: pb.MasterService.IsSnapshotDone:input_type -> pb.IsSnapshotDoneRequest
	95,  // 97: pb.MasterService.RestoreSnapshot:input_type -> pb.RestoreSnapshotRequest
	61,  // 98: pb.MasterService.SwitchSnapshotCleanup:input_type -> pb.SetSnapshotCleanupRequest
	63,  // 99: pb.MasterService.IsSnapshotCleanupEnabled:input_type -> pb.IsSnapshotCleanupEnabledRequest
	113, // 100: pb.MasterService.ExecProcedure:input_type -> pb.ExecProcedureRequest
	113, // 101: pb.MasterService.ExecProcedureWithRet:input_type -> pb.ExecProcedureRequest
	115, // 102: pb.MasterService.IsProcedureDone:input_type -> pb.IsProcedureDoneRequest
	37,  // 103: pb.MasterService.ModifyNamespace:input_type -> pb.ModifyNamespaceRequest
	33,  // 104: pb.MasterService.CreateNamespace:input_type -> pb.CreateNamespaceRequest
	35,  // 105: pb.MasterService.DeleteNamespace:input_type -> pb.DeleteNamespaceRequest
	39,  // 106: pb.MasterService.GetNamespaceDescriptor:input_type -> pb.GetNamespaceDescriptorRequest
	43,  // 107: pb.MasterService.ListNamespaceDescriptors:input_type -> pb.ListNamespaceDescriptorsRequest
	45,  // 108: pb.MasterService.ListTableDescriptorsByNamespace:input_type -> pb.ListTableDescriptorsByNamespaceRequest
	47,  // 109: pb.MasterService.ListTableNamesByNamespace:input_type -> pb.ListTableNamesByNamespaceRequest
	107, // 110: pb.MasterService.GetTableState:input_type -> pb.GetTableStateRequest
	123, // 111: pb.MasterService.SetQuota:input_type -> pb.SetQuotaRequest
	125, // 112: pb.MasterService.getLastMajorCompactionTimestamp:input_type -> pb.MajorCompactionTimestampRequest
	126, // 113: pb.MasterService.getLastMajorCompactionTimestampForRegion:input_type -> pb.MajorCompactionTimestampForRegionRequest
	117, // 114: pb.MasterService.getProcedureResult:input_type -> pb.GetProcedureResultRequest
	128, // 115: pb.MasterService.getSecurityCapabilities:input_type -> pb.SecurityCapabilitiesRequest
	119, // 116: pb.MasterService.AbortProcedure:input_type -> pb.AbortProcedureRequest
	121, // 117: pb.MasterService.GetProcedures:input_type -> pb.GetProceduresRequest
	102, // 118: pb.MasterService.GetSchemaAlterStatus:output_type -> pb.GetSchemaAlterStatusResponse
	104, // 119: pb.MasterService.GetTableDescriptors:output_type -> pb.GetTableDescriptorsResponse
	106, // 120: pb.MasterService.GetTableNames:output_type -> pb.GetTableNamesResponse
	110, // 121: pb.MasterService.GetClusterStatus:output_type -> pb.GetClusterStatusResponse
	112, // 122: pb.MasterService.IsMasterRunning:output_type -> pb.IsMasterRunningResponse
	4,   // 123: pb.MasterService.AddColumn:output_type -> pb.AddColumnResponse
	6,   // 124: pb.MasterService.DeleteColumn:output_type -> pb.DeleteColumnResponse
	8,   // 125: pb.MasterService.ModifyColumn:output_type -> pb.ModifyColumnResponse
	10,  // 126: pb.MasterService.MoveRegion:output_type -> pb.MoveRegionResponse
	12,  // 127: pb.MasterService.MergeTableRegions:output_type -> pb.MergeTableRegionsResponse
	14,  // 128: pb.MasterService.AssignRegion:output_type -> pb.AssignRegionResponse
	16,  // 129: pb.MasterService.UnassignRegion:output_type -> pb.UnassignRegionResponse
	18,  // 130: pb.MasterService.OfflineRegion:output_type -> pb.OfflineRegionResponse
	20,  // 131: pb.MasterService.SplitRegion:output_type -> pb.SplitTableRegionResponse
	24,  // 132: pb.MasterService.DeleteTable:output_type -> pb.DeleteTableResponse
	26,  // 133: pb.MasterService.truncateTable:output_type -> pb.TruncateTableResponse
	28,  // 134: pb.MasterService.EnableTable:output_type -> pb.EnableTableResponse
	30,  // 135: pb.MasterService.DisableTable:output_type -> pb.DisableTableResponse
	32,  // 136: pb.MasterService.ModifyTable:output_type -> pb.ModifyTableResponse
	22,  // 137: pb.MasterService.CreateTable:output_type -> pb.CreateTableResponse
	50,  // 138: pb.MasterService.Shutdown:output_type -> pb.ShutdownResponse
	52,  // 139: pb.MasterService.StopMaster:output_type -> pb.StopMasterResponse
	54,  // 140: pb.MasterService.IsMasterInMaintenanceMode:output_type -> pb.IsInMaintenanceModeResponse
	56,  // 141: pb.MasterService.Balance:output_type -> pb.BalanceResponse
	58,  // 142: pb.MasterService.SetBalancerRunning:output_type -> pb.SetBalancerRunningResponse
	60,  // 143: pb.MasterService.IsBalancerEnabled:output_type -> pb.IsBalancerEnabledResponse
	66,  // 144: pb.MasterService.SetSplitOrMergeEnabled:output_type -> pb.SetSplitOrMergeEnabledResponse
	68,  // 145: pb.MasterService.IsSplitOrMergeEnabled:output_type -> pb.IsSplitOrMergeEnabledResponse
	70,  // 146: pb.MasterService.Normalize:output_type -> pb.NormalizeResponse
	72,  // 147: pb.MasterService.SetNormalizerRunning:output_type -> pb.SetNormalizerRunningResponse
	74,  // 148: pb.MasterService.IsNormalizerEnabled:output_type -> pb.IsNormalizerEnabledResponse
	78,  // 149: pb.MasterService.RunCatalogScan:output_type -> pb.RunCatalogScanResponse
	80,  // 150: pb.MasterService.EnableCatalogJanitor:output_type -> pb.EnableCatalogJanitorResponse
	82,  // 151: pb.MasterService.IsCatalogJanitorEnabled:output_type -> pb.IsCatalogJanitorEnabledResponse
	84,  // 152: pb.MasterService.RunCleanerChore:output_type -> pb.RunCleanerChoreResponse
	86,  // 153: pb.MasterService.SetCleanerChoreRunning:output_type -> pb.SetCleanerChoreRunningResponse
	88,  // 154: pb.MasterService.IsCleanerChoreEnabled:output_type -> pb.IsCleanerChoreEnabledResponse
	147, // 155: pb.MasterService.ExecMasterService:output_type -> pb.CoprocessorServiceResponse
	90,  // 156: pb.MasterService.Snapshot:output_type -> pb.SnapshotResponse
	92,  // 157: pb.MasterService.GetCompletedSnapshots:output_type -> pb.GetCompletedSnapshotsResponse
	94,  // 158: pb.MasterService.DeleteSnapshot:output_type -> pb.DeleteSnapshotResponse
	98,  // 159: pb.MasterService.IsSnapshotDone:output_type -> pb.IsSnapshotDoneResponse
	96,  // 160: pb.MasterService.RestoreSnapshot:output_type -> pb.RestoreSnapshotResponse
	62,  // 161: pb.MasterService.SwitchSnapshotCleanup:output_type -> pb.SetSnapshotCleanupResponse
	64,  // 162: pb.MasterService.IsSnapshotCleanupEnabled:output_type -> pb.IsSnapshotCleanupEnabledResponse
	114, // 163: pb.MasterService.ExecProcedure:output_type -> pb.ExecProcedureResponse
	114, // 164: pb.MasterService.ExecProcedureWithRet:output_type -> pb.ExecProcedureResponse
	116, // 165: pb.MasterService.IsProcedureDone:output_type -> pb.IsProcedureDoneResponse
	38,  // 166: pb.MasterService.ModifyNamespace:output_type -> pb.ModifyNamespaceResponse
	34,  // 167: pb.MasterService.CreateNamespace:output_type -> pb.CreateNamespaceResponse
	36,  // 168: pb.MasterService.DeleteNamespace:output_type -> pb.DeleteNamespaceResponse
	40,  // 169: pb.MasterService.GetNamespaceDescriptor:output_type -> pb.GetNamespaceDescriptorResponse
	44,  // 170: pb.MasterService.ListNamespaceDescriptors:output_type -> pb.ListNamespaceDescriptorsResponse
	46,  // 171: pb.MasterService.ListTableDescriptorsByNamespace:output_type -> pb.ListTableDescriptorsByNamespaceResponse
	48,  // 172: pb.MasterService.ListTableNamesByNamespace:output_type -> pb.ListTableNamesByNamespaceResponse
	108, // 173: pb.MasterService.GetTableState:output_type -> pb.GetTableStateResponse
	124, // 174: pb.MasterService.SetQuota:output_type -> pb.SetQuotaResponse
	127, // 175: pb.MasterService.getLastMajorCompactionTimestamp:output_type -> pb.MajorCompactionTimestampResponse
	127, // 176: pb.MasterService.getLastMajorCompactionTimestampForRegion:output_type -> pb.MajorCompactionTimestampResponse
	118, // 177: pb.MasterService.getProcedureResult:output_type -> pb.GetProcedureResultResponse
	129, // 178: pb.MasterService.getSecurityCapabilities:output_type -> pb.SecurityCapabilitiesResponse
	120, // 179: pb.MasterService.AbortProcedure:output_type -> pb.AbortProcedureResponse
	122, // 180: pb.MasterService.GetProcedures:output_type -> pb.GetProceduresResponse
	118, // [118:181] is the sub-list for method output_type
	55,  // [55:118] is the sub-list for method input_type
	55,  // [55:55] is the sub-list for extension type_name
	55,  // [55:55] is the sub-list for extension extendee
	0,   // [0:55] is the sub-list for field type_name
}

func init() { file_Master_proto_init() }
func file_Master_proto_init() {
	if File_Master_proto != nil {
		return
	}
	file_HBase_proto_init()
	file_Client_proto_init()
	file_Quota_proto_init()
	file_Procedure_proto_init()
	file_ClusterStatus_proto_init()
	file_ErrorHandling_proto_init()
	file_Snapshot_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Master_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddColumnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteColumnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyColumnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTableRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTableRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitTableRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitTableRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceDescriptorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceDescriptorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTableDescriptorsByNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTableDescriptorsByNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTableNamesByNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTableNamesByNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopMasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopMasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInMaintenanceModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInMaintenanceModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBalancerRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBalancerRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBalancerEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBalancerEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSnapshotCleanupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSnapshotCleanupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSnapshotCleanupEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSnapshotCleanupEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSplitOrMergeEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSplitOrMergeEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSplitOrMergeEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSplitOrMergeEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNormalizerRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNormalizerRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsNormalizerEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsNormalizerEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunHbckChoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunHbckChoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCatalogScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCatalogScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableCatalogJanitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableCatalogJanitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCatalogJanitorEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCatalogJanitorEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCleanerChoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCleanerChoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCleanerChoreRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCleanerChoreRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCleanerChoreEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCleanerChoreEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompletedSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompletedSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSnapshotDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSnapshotDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRestoreSnapshotDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRestoreSnapshotDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaAlterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaAlterStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableDescriptorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableDescriptorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMasterRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMasterRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecProcedureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecProcedureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsProcedureDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsProcedureDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcedureResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcedureResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortProcedureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortProcedureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProceduresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProceduresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MajorCompactionTimestampRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MajorCompactionTimestampForRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MajorCompactionTimestampResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityCapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Master_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityCapabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Master_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   127,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Master_proto_goTypes,
		DependencyIndexes: file_Master_proto_depIdxs,
		EnumInfos:         file_Master_proto_enumTypes,
		MessageInfos:      file_Master_proto_msgTypes,
	}.Build()
	File_Master_proto = out.File
	file_Master_proto_rawDesc = nil
	file_Master_proto_goTypes = nil
	file_Master_proto_depIdxs = nil
}
